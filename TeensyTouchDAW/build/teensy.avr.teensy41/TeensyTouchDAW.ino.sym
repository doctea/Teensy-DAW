
C:\Users\slau\AppData\Local\Temp\arduino\sketches\B2DCAD1C83A78B83FC3CD07769CE8B1E/TeensyTouchDAW.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600021dc l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00042420 l    d  .fini	00000000 .fini
00042424 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200076c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
60080450 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
00000000 l    df *ABS*	00000000 imxrt_hw.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 analog.c
20022d34 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
200229d0 l     O .bss	00000004 s_hotTemp
200229d4 l     O .bss	00000004 s_hot_ROOM
200229d8 l     O .bss	00000004 s_roomC_hotC
200229cc l     O .bss	00000004 s_hotCount
00000000 l    df *ABS*	00000000 usb.c
00038824 l     F .text.itcm	00000090 schedule_transfer
000388b4 l     F .text.itcm	00000036 run_callbacks
000388ec l     F .text.itcm	000000a0 endpoint0_transmit.constprop.1
20010a70 l     O .bss	00000004 endpointN_notify_mask
20022d4b l     O .bss	00000001 sof_usage
20010a6c l     O .bss	00000004 endpoint0_notify_mask
20022d58 l     O .bss	00000001 usb_reboot_timer
2000e1a8 l     O .bss	00000008 endpoint0_setupdata
200190f8 l     O .bss	00000008 reply_buffer
20010a64 l     O .bss	00000008 endpoint0_buffer
00000000 l    df *ABS*	00000000 c:/users/slau/appdata/local/arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crti.o
00000000 l    df *ABS*	00000000 c:/users/slau/appdata/local/arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000dc l     F .text.itcm	00000000 __do_global_dtors_aux
2000e1b0 l       .bss	00000000 completed.8605
00000100 l     F .text.itcm	00000000 frame_dummy
2000e1b4 l       .bss	00000000 object.8610
60002168 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 TeensyTouchDAW.ino.cpp
00000568 l     F .text.itcm	0000002c File::dec_refcount() [clone .isra.65]
00000594 l     F .text.itcm	0000005c continueRecording() [clone .part.104]
000005f0 l     F .text.itcm	00000050 Encoder_to_Pot_Value2(int, int, int, int) [clone .part.105]
000007f4 l     F .text.itcm	0000005c long map<unsigned char, int, int, float, float>(unsigned char, int, int, float, float, std::enable_if<std::is_integral<unsigned char>::value, void>::type*) [clone .isra.143] [clone .constprop.200]
00000a80 l     F .text.itcm	00000076 newdigate::ResamplingReader<newdigate::IndexableSDFile<128u, 2u>, File>::initializeInterpolationPoints() [clone .part.161]
00000c08 l     F .text.itcm	000000e8 scaleSelector() [clone .part.101]
00000da4 l     F .text.itcm	00000254 startUpScreen()
000058b8 l     F .text.itcm	000000e8 LP_songmode(int) [clone .part.102]
00005ad0 l     F .text.itcm	000000b0 gridSongMode(int)
00006ca4 l     F .text.itcm	00000094 NoteFX8_Page_Static()
00006ed0 l     F .text.itcm	00000098 drumStepSequencer_Static()
00006f68 l     F .text.itcm	00000118 gridStepSequencer(int)
00007080 l     F .text.itcm	00000168 LP_drumstep() [clone .part.103]
00010568 l     F .text.itcm	000000e4 OSC_Waveform(int, int, int, int, int, int, char const*) [clone .part.106]
00010650 l     F .text.itcm	000000a0 OSC_Detune(int, int, int, int, float, float, char const*) [clone .part.107]
000106f0 l     F .text.itcm	000000bc OSC_PWM(int, int, int, int, float, float, char const*) [clone .part.108]
000107ac l     F .text.itcm	000000b4 OSC_amplitude(int, int, int, int, float, float, char const*) [clone .part.109]
00010860 l     F .text.itcm	000000e8 OSC_MOD_Waveform(int, int, int, int, int, int, char const*) [clone .part.110]
00010948 l     F .text.itcm	000000b4 OSC_MOD_amplitude(int, int, int, int, float, float, char const*) [clone .part.111]
000109fc l     F .text.itcm	000000bc PWM_amplitude(int, int, int, int, float, float, char const*) [clone .part.112]
00010ab8 l     F .text.itcm	000000d4 DC_amplitude(int, int, int, int, float, float, char const*) [clone .part.113]
00010b8c l     F .text.itcm	000000b4 WHITE_amplitude(int, int, int, int, float, float, char const*) [clone .part.114]
00010c40 l     F .text.itcm	000000b4 ENV_S(int, int, int, int, float, float, char const*) [clone .part.115]
00010cf4 l     F .text.itcm	000000e4 SVF_resonance(int, int, int, int, float, float, char const*) [clone .part.117]
00010dd8 l     F .text.itcm	000000a8 LDF_resonance(int, int, int, int, float, float, char const*) [clone .part.119]
00012684 l     F .text.itcm	00000094 OSC_frequency(int, int, int, int, float, float, char const*) [clone .part.144]
0001279c l     F .text.itcm	00000094 OSC_MOD_frequency(int, int, int, int, float, float, char const*) [clone .part.146]
00012908 l     F .text.itcm	0000009c OSC_DRUM_frequency(int, int, int, int, int, int, char const*) [clone .part.130]
00012a50 l     F .text.itcm	0000009c OSC_DRUM_length(int, int, int, int, int, int, char const*) [clone .part.131]
00012b2c l     F .text.itcm	00000090 OSC_DRUM_secondMix(int, int, int, int, float, float, char const*) [clone .part.147]
00012bfc l     F .text.itcm	00000090 OSC_DRUM_pitchMod(int, int, int, int, float, float, char const*) [clone .part.148]
00012d4c l     F .text.itcm	0000009c ENV_A(int, int, int, int, int, int, char const*) [clone .part.132]
00012ea8 l     F .text.itcm	0000009c ENV_D(int, int, int, int, int, int, char const*) [clone .part.133]
00013004 l     F .text.itcm	0000009c ENV_R(int, int, int, int, int, int, char const*) [clone .part.134]
00013394 l     F .text.itcm	000000b0 SVF_frequency(int, int, int, int, int, int, char const*) [clone .part.116]
00013510 l     F .text.itcm	0000009c SVF_octaveControl(int, int, int, int, int, int, char const*) [clone .part.135]
00013b9c l     F .text.itcm	000000a0 SVF_Type(int, int, int, int, int, int, char const*) [clone .part.136]
00013c88 l     F .text.itcm	000000b0 LDF_frequency(int, int, int, int, int, int, char const*) [clone .part.118]
00013dd0 l     F .text.itcm	0000009c LDF_octaveControl(int, int, int, int, int, int, char const*) [clone .part.137]
00013f24 l     F .text.itcm	0000009c bitCrush_sampleRate(int, int, int, int, int, int, char const*) [clone .part.138]
0001404c l     F .text.itcm	0000009c bitCrush_bits(int, int, int, int, int, int, char const*) [clone .part.139]
000142a0 l     F .text.itcm	0000009c reverb_reverbTime(int, int, int, int, int, int, char const*) [clone .part.141]
00017158 l     F .text.itcm	0000005c change_preset(int) [clone .part.145]
0001cd24 l     F .text.itcm	00004a44 _GLOBAL__sub_I_debugTime
2000f164 l     O .bss	00000004 drawNrInRect(int, unsigned char, unsigned char, int)::dvalue_old
20001db8 l     O .data	0000000c LP_octave_notes
2000f198 l     O .bss	00000004 drawPot_3(int, unsigned char, unsigned char, int, char*, int)::circlePos_3
2000f184 l     O .bss	00000004 drawPotCC(int, unsigned char, unsigned char, unsigned char, int)::dvalue_oldcc
2000f178 l     O .bss	00000004 drawPot(int, unsigned char, unsigned char, int, char*, int)::circlePos_old
20001dc4 l     O .data	00000010 keys
2000f15c l     O .bss	00000004 drawPotDrum(int, unsigned char, unsigned char, int, unsigned char, int)::circlePos_old
2000f1a8 l     O .bss	00000004 drawPot_4(int, unsigned char, unsigned char, int, char*, int)::dvalue_old_4
20022d2a l     O .bss	00000001 melodicStepSequencer(int)::touched
2000f158 l     O .bss	00000004 drawPotDrum(int, unsigned char, unsigned char, int, unsigned char, int)::dvalue_old
20022d28 l     O .bss	00000001 drumStepSequencer()::touched
2000f16c l     O .bss	00000004 drawCursorPixel()::last_button_X
2000f170 l     O .bss	00000004 drawCursorPixel()::last_button_Y
20022d2b l     O .bss	00000001 NoteFX5_Page1_Dynamic()::touched
2000205c l     O .data	00000004 rowPins
2000f19c l     O .bss	00000004 drawPot_3(int, unsigned char, unsigned char, int, char*, int)::dvalue_old_3
20001de8 l     O .data	00000270 scales
2000f168 l     O .bss	00000004 drawNrInRect2(int, unsigned char, unsigned char, int)::dvalue_old2
2000f190 l     O .bss	00000004 drawPot_2(int, unsigned char, unsigned char, int, char*, int)::dvalue_old_2
2000f17c l     O .bss	00000004 drawPot(int, unsigned char, unsigned char, int, char*, int)::circlePos
2000f1ac l     O .bss	00000004 drawPot_4(int, unsigned char, unsigned char, int, char*, int)::circlePos_old_4
2000f160 l     O .bss	00000004 drawPotDrum(int, unsigned char, unsigned char, int, unsigned char, int)::circlePos
2000f174 l     O .bss	00000004 drawPot(int, unsigned char, unsigned char, int, char*, int)::dvalue_old
2000f18c l     O .bss	00000004 drawPot_2(int, unsigned char, unsigned char, int, char*, int)::circlePos_2
20200000 l     O .bss.dma	00026160 setup::data
20002058 l     O .data	00000004 colPins
2000f1a0 l     O .bss	00000004 drawPot_3(int, unsigned char, unsigned char, int, char*, int)::circlePos_old_3
20022d2c l     O .bss	00000001 NoteFX8_Page1_Dynamic()::touched
2000f188 l     O .bss	00000004 drawPotCC(int, unsigned char, unsigned char, unsigned char, int)::circlePos_oldcc
2000f1a4 l     O .bss	00000004 drawPot_4(int, unsigned char, unsigned char, int, char*, int)::circlePos_4
20002134 l     O .data	00000640 beatArray
2000f194 l     O .bss	00000004 drawPot_2(int, unsigned char, unsigned char, int, char*, int)::circlePos_old_2
20022d29 l     O .bss	00000001 MixerPage1_Dynamic()::touched
2000f180 l     O .bss	00000004 drawPotCC(int, unsigned char, unsigned char, unsigned char, int)::circlePoscc
20022d26 l     O .bss	00000001 drawCursor()::last_button_X
20022d27 l     O .bss	00000001 drawCursor()::last_button_Y
00000000 l    df *ABS*	00000000 async_input_spdif3.cpp
00022020 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN21AsyncAudioInputSPDIF310microsLastE
00000000 l    df *ABS*	00000000 input_adc.cpp
0002396c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputAnalog3dmaE
00000000 l    df *ABS*	00000000 input_i2s.cpp
00023bb0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
20226160 l     O .bss.dma	00000200 i2s_rx_buffer
00000000 l    df *ABS*	00000000 input_i2s2.cpp
00023bc8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputI2S210block_leftE
00000000 l    df *ABS*	00000000 input_i2s_hex.cpp
00023be0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SHex9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_oct.cpp
00023bf8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SOct9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
00023c10 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 input_pdm.cpp
00023c28 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 input_pdm_i2s2.cpp
00023c40 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputPDM210block_leftE
00000000 l    df *ABS*	00000000 input_spdif3.cpp
00023c58 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputSPDIF310block_leftE
00000000 l    df *ABS*	00000000 input_tdm.cpp
00023c70 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_tdm2.cpp
00023c88 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputTDM214block_incomingE
00000000 l    df *ABS*	00000000 output_i2s.cpp
000242b0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
20226360 l     O .bss.dma	00000200 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_i2s2.cpp
000242c8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputI2S214block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s_hex.cpp
000242e0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SHex13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_oct.cpp
000242f8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SOct13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
00024310 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_mqs.cpp
00024328 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputMQS14block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
00024340 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211_2.cpp
00024358 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN19AudioOutputPT8211_214block_left_1stE
00000000 l    df *ABS*	00000000 output_pwm.cpp
00024370 l     F .text.itcm	0000001c __tcf_0
0002438c l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN14AudioOutputPWM21update_responsibilityE
00000000 l    df *ABS*	00000000 output_spdif.cpp
000243bc l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif2.cpp
000243d4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF214block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif3.cpp
000243ec l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF314block_left_1stE
00000000 l    df *ABS*	00000000 output_tdm.cpp
00024404 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_tdm2.cpp
0002441c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputTDM211block_inputE
00000000 l    df *ABS*	00000000 SD.cpp
000277a0 l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 AudioSampleTest.cpp
00000000 l    df *ABS*	00000000 serialEvent1.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
60036958 l     O .text.progmem	0000000a qualifier_descriptor
20006d08 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 interrupt.c
00038000 l     F .text.itcm	00000002 dummy_isr
00000000 l    df *ABS*	00000000 v_smfwriter.cpp
20001dd4 l     O .data	00000012 header
00000000 l    df *ABS*	00000000 analyze_peak.cpp
00000000 l    df *ABS*	00000000 control_sgtl5000.cpp
00000000 l    df *ABS*	00000000 effect_bitcrusher.cpp
00000000 l    df *ABS*	00000000 effect_delay.cpp
00000000 l    df *ABS*	00000000 effect_envelope.cpp
00000000 l    df *ABS*	00000000 effect_reverb.cpp
00000000 l    df *ABS*	00000000 filter_biquad.cpp
00000000 l    df *ABS*	00000000 filter_ladder.cpp
00000000 l    df *ABS*	00000000 filter_variable.cpp
00000000 l    df *ABS*	00000000 C:\Users\slau\AppData\Local\Temp\arduino\sketches\B2DCAD1C83A78B83FC3CD07769CE8B1E\libraries\Audio\memcpy_audio.S.o
00023ca8 l       .text.itcm	00000000 .loopLR
00023cec l       .text.itcm	00000000 .loopL
00023d2c l       .text.itcm	00000000 .loopR
00023d68 l       .text.itcm	00000000 .loopQuad
00000000 l    df *ABS*	00000000 mixer.cpp
00000000 l    df *ABS*	00000000 play_memory.cpp
00000000 l    df *ABS*	00000000 play_sd_wav.cpp
00000000 l    df *ABS*	00000000 record_queue.cpp
00000000 l    df *ABS*	00000000 synth_dc.cpp
00000000 l    df *ABS*	00000000 synth_karplusstrong.cpp
00000000 l    df *ABS*	00000000 synth_pinknoise.cpp
00000000 l    df *ABS*	00000000 synth_pwm.cpp
00000000 l    df *ABS*	00000000 synth_simple_drum.cpp
00000000 l    df *ABS*	00000000 synth_sine.cpp
00000000 l    df *ABS*	00000000 synth_waveform.cpp
00025e58 l     F .text.itcm	00000040 BandLimitedWaveform::new_step_check_saw(unsigned long, int) [clone .part.2]
00000000 l    df *ABS*	00000000 synth_whitenoise.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00026bd0 l     F .text.itcm	00000058 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.11]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
0002946c l     F .text.itcm	0000002a ExFatPartition::fatPut(unsigned long, unsigned long) [clone .part.3]
00000000 l    df *ABS*	00000000 FatFile.cpp
000298f0 l     F .text.itcm	00000036 FatFile::openRoot(FatVolume*) [clone .part.38]
000299f8 l     F .text.itcm	00000094 FatFile::sync() [clone .part.42]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
0002b0f8 l     F .text.itcm	0000002c initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
0002b898 l     F .text.itcm	0000010e FatPartition::fatPut(unsigned long, unsigned long) [clone .part.7]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
0002c168 l     F .text.itcm	00000022 SharedSpiCard::spiStart() [clone .part.8] [clone .constprop.34]
0002c18c l     F .text.itcm	00000006 SharedSpiCard::syncDevice() [clone .part.19] [clone .constprop.35]
0002c194 l     F .text.itcm	00000022 SharedSpiCard::spiStop() [clone .part.9] [clone .constprop.37]
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0002ca58 l     F .text.itcm	00000030 sdIrs()
0002ca88 l     F .text.itcm	00000018 isBusyCommandComplete()
0002caa0 l     F .text.itcm	00000010 isBusyCommandInhibit()
0002cab0 l     F .text.itcm	00000014 isBusyDat()
0002cac4 l     F .text.itcm	0000000c isBusyDMA()
0002cad0 l     F .text.itcm	00000014 isBusyFifoRead()
0002cae4 l     F .text.itcm	00000014 isBusyFifoWrite()
0002caf8 l     F .text.itcm	00000018 isBusyTransferComplete()
0002cb10 l     F .text.itcm	000000d0 setSdclk(unsigned long)
0002cc44 l     F .text.itcm	00000028 waitTimeout(bool (*)())
0002cc6c l     F .text.itcm	0000004c yieldTimeout(bool (*)())
0002ccc8 l     F .text.itcm	00000044 enableGPIO(bool) [clone .part.0]
0002cd2c l     F .text.itcm	00000068 cardCommand(unsigned long, unsigned long)
0002cd94 l     F .text.itcm	0000002c isBusyCMD13()
0002cde0 l     F .text.itcm	0000005c readReg16(unsigned long, void*)
0002ce3c l     F .text.itcm	00000020 waitDmaStatus() [clone .part.5]
0002ce5c l     F .text.itcm	000000b8 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
0002d0a8 l     F .text.itcm	00000058 waitTransferComplete() [clone .part.10]
0002d444 l     F .text.itcm	0000009c cardCMD6(unsigned long, unsigned char*)
20022d1a l     O .bss	00000001 m_version2
2000ee90 l     O .bss	00000010 m_cid
2000eec4 l     O .bss	00000004 m_busyFcn
20022d1c l     O .bss	00000001 m_highCapacity
2000eeb0 l     O .bss	00000004 m_ocr
2000eeb4 l     O .bss	00000004 m_rca
20022d1d l     O .bss	00000001 m_transferActive
2000eec8 l     O .bss	00000004 m_irqstat
2000729d l     O .data	00000001 m_errorCode
20022d19 l     O .bss	00000001 m_initDone
2000eea0 l     O .bss	00000010 m_csd
20022d1e l     O .bss	00000001 m_dmaBusy
2000ecb8 l     O .bss	00000004 m_sdClkKhz
2000ed3c l     O .bss	00000004 m_errorLine
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
0002dd0c l     F .text.itcm	00000046 FsCache::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0002ddc4 l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001bbc l     O .data	0000012c lookupTable
20002060 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 ILI9341_t3.cpp
0002e5a0 l     F .text.itcm	00000046 fetchbits_unsigned(unsigned char const*, unsigned long, unsigned long)
0002e5e8 l     F .text.itcm	00000050 SPIClass::endTransaction() [clone .part.1] [clone .constprop.17]
0002e744 l     F .text.itcm	0000070c ILI9341_t3::drawFontBits(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [clone .part.10] [clone .constprop.14]
0002eed8 l     F .text.itcm	00000384 ILI9341_t3::drawFastVLine(short, short, short, unsigned short) [clone .part.8] [clone .constprop.13]
0002f25c l     F .text.itcm	000003d0 ILI9341_t3::readRect(short, short, short, short, unsigned short*) [clone .part.9] [clone .constprop.16]
20001ce8 l     O .data	0000006c init_commands
00000000 l    df *ABS*	00000000 XPT2046_Touchscreen.cpp
0003368c l     F .text.itcm	00000056 besttwoavg(short, short, short)
2000eec0 l     O .bss	00000004 isrPinptr
00000000 l    df *ABS*	00000000 interpolation.cpp
00000000 l    df *ABS*	00000000 Adafruit_Keypad.cpp
00000000 l    df *ABS*	00000000 ehci.cpp
00033ed8 l     F .text.itcm	0000000e USBHost::followup_Transfer(Transfer_struct*) [clone .part.5]
2000ee88 l     O .bss	00000004 periodic_followup_first
2000ee7c l     O .bss	00000004 async_followup_last
2000ee80 l     O .bss	00000004 async_followup_first
20008000 l     O .bss	00000080 periodictable
2000ed40 l     O .bss	00000004 active_timers
2000ee84 l     O .bss	00000004 periodic_followup_last
20022d1b l     O .bss	00000001 port_state
2000ed74 l     O .bss	00000100 uframe_bandwidth
2000eebc l     O .bss	00000004 rootdev
00000000 l    df *ABS*	00000000 enumeration.cpp
20022cf0 l     O .bss	00000002 enumlen
2000d9a0 l     O .bss	00000800 enumbuf
20022d2f l     O .bss	00000001 USBHost::assign_address()::last_assigned_address
2000ee74 l     O .bss	00000004 available_drivers
2000e1a0 l     O .bss	00000008 enumsetup
2000eeb8 l     O .bss	00000004 devlist
00000000 l    df *ABS*	00000000 hub.cpp
00035a10 l     F .text.itcm	00000150 USBHub::new_port_status(unsigned long, unsigned long) [clone .part.19] [clone .constprop.21]
00000000 l    df *ABS*	00000000 memory.cpp
2000ed44 l     O .bss	00000024 memory_Device
2000ed6c l     O .bss	00000004 free_Device_list
20008080 l     O .bss	00000060 memory_Pipe
2000ed70 l     O .bss	00000004 free_strbuf_list
200080e0 l     O .bss	00000100 memory_Transfer
2000ee78 l     O .bss	00000004 free_Transfer_list
2000ed68 l     O .bss	00000004 free_Pipe_list
00000000 l    df *ABS*	00000000 midi.cpp
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
2000ecfc l     O .bss	00000040 tx_buffer1
20001d54 l     O .data	00000064 UART6_Hardware
2000ecbc l     O .bss	00000040 rx_buffer1
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20002774 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WMath.cpp
00037a74 l     F .text.itcm	0000007c random(unsigned long) [clone .part.0]
2000ee8c l     O .bss	00000004 seed
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00037f00 l     F .text.itcm	0000004c digitalWrite.part.0
00037f4c l     F .text.itcm	0000001c digitalRead.part.1
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
00039214 l     F .text.itcm	00000048 sysex_byte
0003925c l     F .text.itcm	0000006c rx_queue_transfer
000392c8 l     F .text.itcm	00000064 rx_event
0003932c l     F .text.itcm	00000120 usb_midi_write_packed.part.0
20226600 l     O .bss.dma	00000c00 rx_buffer
20227200 l     O .bss.dma	00000800 txbuffer
20022d08 l     O .bss	00000002 rx_packet_size
20022d0c l     O .bss	00000002 tx_available
20022d10 l     O .bss	00000002 tx_packet_size
20022d44 l     O .bss	00000001 rx_head
20022d53 l     O .bss	00000001 tx_noautoflush
20022d46 l     O .bss	00000001 rx_tail
20022d4f l     O .bss	00000001 transmit_previous_timeout
20022980 l     O .bss	0000000c rx_count
2000d6e0 l     O .bss	000000c0 rx_transfer
20022978 l     O .bss	00000004 rx_available
2002299c l     O .bss	0000000c rx_index
2000d8a0 l     O .bss	00000080 tx_transfer
20022d51 l     O .bss	00000001 tx_head
200229b8 l     O .bss	00000007 rx_list
00000000 l    df *ABS*	00000000 usb_serial.c
00039a2c l     F .text.itcm	0000006c rx_queue_transfer
00039a98 l     F .text.itcm	000000b4 rx_event
00039b4c l     F .text.itcm	00000098 usb_serial_flush_callback
00039be4 l     F .text.itcm	00000194 usb_serial_write.part.1
200229a8 l     O .bss	00000010 rx_index
20022d12 l     O .bss	00000002 tx_packet_size
20022d54 l     O .bss	00000001 tx_noautoflush
20022d52 l     O .bss	00000001 tx_head
2000d7a0 l     O .bss	00000100 rx_transfer
20022d47 l     O .bss	00000001 rx_tail
200229c0 l     O .bss	00000009 rx_list
20022d0a l     O .bss	00000002 rx_packet_size
20227a00 l     O .bss.dma	00001000 rx_buffer
20228a00 l     O .bss.dma	00002000 txbuffer
2002298c l     O .bss	00000010 rx_count
2002297c l     O .bss	00000004 rx_available
20022d45 l     O .bss	00000001 rx_head
20022d50 l     O .bss	00000001 transmit_previous_timeout
20022d0e l     O .bss	00000002 tx_available
2000d920 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20022d2d l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 arm_q31_to_q15.c
00000000 l    df *ABS*	00000000 arm_q15_to_q31.c
00000000 l    df *ABS*	00000000 arm_float_to_q31.c
00000000 l    df *ABS*	00000000 arm_fir_interpolate_init_f32.c
00000000 l    df *ABS*	00000000 arm_fir_interpolate_f32.c
00000000 l    df *ABS*	00000000 arm_fir_decimate_init_f32.c
00000000 l    df *ABS*	00000000 arm_fir_decimate_f32.c
00000000 l    df *ABS*	00000000 arm_shift_q31.c
00000000 l    df *ABS*	00000000 arm_add_q31.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 sf_ldexp.c
00000000 l    df *ABS*	00000000 sf_modf.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 sf_sin.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 wf_pow.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
20003924 l     O .data	00000080 npio2_hw
20005378 l     O .data	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 ef_pow.c
00000000 l    df *ABS*	00000000 ef_rem_pio2.c
200039a4 l     O .data	00000080 npio2_hw
20005480 l     O .data	00000318 two_over_pi
00000000 l    df *ABS*	00000000 ef_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
20003908 l     O .data	00000010 init_jk
20000280 l     O .data	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 kf_cos.c
00000000 l    df *ABS*	00000000 kf_rem_pio2.c
20003918 l     O .data	0000000c init_jk
20001b90 l     O .data	0000002c PIo2
00000000 l    df *ABS*	00000000 kf_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
200002c0 l     O .data	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 sf_copysign.c
00000000 l    df *ABS*	00000000 sf_fabs.c
00000000 l    df *ABS*	00000000 sf_finite.c
00000000 l    df *ABS*	00000000 sf_floor.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
20005a04 l     O .data	00000010 zeroes.7258
2000308c l     O .data	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 dtoa.c
00040c40 l     F .text.itcm	00000128 quorem
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 mprec.c
20003a24 l     O .data	0000000c p05.6087
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 font_Arial.c
20000720 l     O .data	00000077 Arial_10_index
200003f8 l     O .data	00000328 Arial_10_data
20000ba8 l     O .data	00000077 Arial_12_index
200007b4 l     O .data	000003f3 Arial_12_data
20000c3c l     O .data	0000060f Arial_16_data
200012ec l     O .data	00000290 Arial_8_data
2000157c l     O .data	00000077 Arial_8_index
20001914 l     O .data	00000077 Arial_9_index
20001610 l     O .data	00000303 Arial_9_data
2000124c l     O .data	00000083 Arial_16_index
00000000 l    df *ABS*	00000000 data_waveforms.c
00000000 l    df *ABS*	00000000 effect_delay_ext.cpp
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20005a18 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 glcdfont.c
00000000 l    df *ABS*	00000000 data_bandlimit_step.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 data_ulaw.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 Encoder.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
60081400 l       .text.csf	00000000 __text_csf_end
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 __bss_start__
00000000 l       *UND*	00000000 __bss_end__
000423f8 l     F .text.itcm	00000008 ___Z14set_audioClockilmb_veneer
00042400 l     F .text.itcm	00000008 ___init_veneer
00042408 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00042410 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00042418 l     F .text.itcm	00000008 ___ZN11AudioStream17initialize_memoryEP18audio_block_structj_veneer
60002128 l     F .text.code	00000008 __memset_veneer
60002130 l     F .text.code	00000008 __delay_veneer
60002138 l     F .text.code	00000008 __set_arm_clock_veneer
60002140 l     F .text.code	00000008 __pwm_init_veneer
60002148 l     F .text.code	00000008 ____libc_init_array_veneer
60002150 l     F .text.code	00000008 __main_veneer
60002158 l     F .text.code	00000008 __sm_set_pool_veneer
60002160 l     F .text.code	00000008 __usb_init_serialnumber_veneer
00004a80 g     F .text.itcm	000000e0 SerialPrintSeq()
000171b4 g     F .text.itcm	000000c8 Plugin2_Page1_Dynamic()
00027284  w    F .text.itcm	00000050 SDClass::mkdir(char const*)
2000e690 g     O .bss	0000000c LP_octave_bool_keys
0002ab94 g     F .text.itcm	000000b0 FatFile::makeUniqueSfn(FatLfn_t*)
00038168 g     F .text.itcm	00000010 main
00006d38 g     F .text.itcm	000000d4 LP_drawclipRow()
0000cbd4 g     F .text.itcm	000004c0 songModePage(int)
20018d88 g     O .bss	00000004 plugin
00003600  w    F .text.itcm	00000068 AudioPlaySdWav::AudioPlaySdWav()
00006adc g     F .text.itcm	00000090 drawNrInRect(int, unsigned char, unsigned char, int)
20017764 g     O .bss	00000274 playSdWav12
0002c04c  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00039d78 g     F .text.itcm	00000002 usb_serial_reset
000284ac g     F .text.itcm	000000b4 ExFatFile::addDirCluster()
00025a10 g     F .text.itcm	000000fc AudioSynthWaveformPWM::update()
0003f360 g     F .text.itcm	00000024 _sbrk_r
0002ba98 g     F .text.itcm	000000a2 FatPartition::allocateCluster(unsigned long, unsigned long*)
20010b2c g     O .bss	00000004 fx3delayFeedback_graph
000320ec g     F .text.itcm	00000ad8 ILI9341_t3::drawRect(short, short, short, short, unsigned short)
00040b70 g     F .text.itcm	0000002c _write_r
200117f0 g     O .bss	00000014 patchCord213
00002688  w    F .text.itcm	00000088 Encoder::isr10()
200117dc g     O .bss	00000014 patchCord212
20014000 g     O .bss	00000020 pl2FX2
0003edb0 g     F .text.itcm	00000062 memcmp
20011b74 g     O .bss	00000014 patchCord254
20018d78 g     O .bss	00000010 plpreset
20011f48 g     O .bss	00000014 patchCord299
200159d0 g     O .bss	00000038 pl8envelope2
2000efc4 g     O .bss	00000004 EventResponder::firstYield
200174f0 g     O .bss	00000274 playSdWav11
20014020 g     O .bss	00000020 pl2FX3
20011f20 g     O .bss	00000014 patchCord297
20011b60 g     O .bss	00000014 patchCord253
20015998 g     O .bss	00000038 pl8envelope1
20011f34 g     O .bss	00000014 patchCord298
200117c8 g     O .bss	00000014 patchCord211
20011f0c g     O .bss	00000014 patchCord296
20011b4c g     O .bss	00000014 patchCord252
200117b4 g     O .bss	00000014 patchCord210
2000e7e4 g     O .bss	000004d4 SD
00007b0c g     F .text.itcm	00000424 recorder_Page1_Dynamic()
20022db4 g     O .bss	00000122 usb_midi_msg_sysex
20011b38 g     O .bss	00000014 patchCord251
0003e6f4 g     F .text.itcm	0000000c __errno
000304bc g     F .text.itcm	0000002c ILI9341_t3::readPixel(short, short)
20012de0 g     O .bss	00000020 pl15amp2
20011ed0 g     O .bss	00000014 patchCord293
200150f4 g     O .bss	00000020 pl7noise1
20011b24 g     O .bss	00000014 patchCord250
000420c8 g     F .text.itcm	00000114 __mdiff
000292ec g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00026c28 g     F .text.itcm	000000d4 _spi_dma_rxISR0()
20010b3c g     O .bss	00000020 i2s1
20012f40 g     O .bss	00000020 pl1amp
20011ef8 g     O .bss	00000014 patchCord295
20011ebc g     O .bss	00000014 patchCord292
00035ea4 g     F .text.itcm	00000030 USBHost::contribute_Devices(Device_struct*, unsigned long)
00035f04 g     F .text.itcm	00000034 USBHost::contribute_Transfers(Transfer_struct*, unsigned long)
20011ee4 g     O .bss	00000014 patchCord294
20002980 g     O .data	00000100 AudioSynthNoisePink::pnmask
20010b5c g     O .bss	00000018 i2s2
00040d68 g     F .text.itcm	00000c84 _dtoa_r
0000e370 g     F .text.itcm	00000280 FX3Delay_settings()
20010a48 g     O .bss	00000004 effect
00001d54  w    F .text.itcm	0000008c Encoder::isr41()
20012880 g     O .bss	00000028 pl10pwm1
000297c8 g     F .text.itcm	000000ec ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
20022d3a g     O .bss	00000001 gridTouchX
0002d100 g     F .text.itcm	00000078 SdioCard::writeStop()
20015114 g     O .bss	00000020 pl7noise2
20022d3b g     O .bss	00000001 gridTouchY
20012be0 g     O .bss	00000020 pl13FX1
0000e8fc g     F .text.itcm	000000d8 NoteFX1_Page_Static()
00015a98 g     F .text.itcm	000002ec beatComponents()
0001aad8 g     F .text.itcm	00000444 midiCCpage1_Dynamic(int)
0002bd9c g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00036fb8 g     F .text.itcm	00000090 HardwareSerial::read()
00026ab0 g     F .text.itcm	00000008 BandLimitedWaveform::init_square(unsigned long)
20009ee0 g     O .bss	00000700 midi03
20022eec g     O .bss	00000004 errno
200128a8 g     O .bss	00000028 pl10pwm2
20012c20 g     O .bss	00000020 pl13FX3
200097e0 g     O .bss	00000700 midi02
20011818 g     O .bss	00000014 patchCord215
20002f74  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
20011b9c g     O .bss	00000014 patchCord256
20002da8  w    O .data	00000024 vtable for FsFile
20011804 g     O .bss	00000014 patchCord214
20005eac g     O .data	00000018 FILTERMIXER
00042084 g     F .text.itcm	00000042 __mcmp
0003f580 g     F .text.itcm	00001570 _svfprintf_r
20011b88 g     O .bss	00000014 patchCord255
200090e0 g     O .bss	00000700 midi01
00027b24 g     F .text.itcm	0000002c ExFatFile::peek()
20011bc4 g     O .bss	00000014 patchCord258
20011bb0 g     O .bss	00000014 patchCord257
20011840 g     O .bss	00000014 patchCord217
00003238  w    F .text.itcm	0000008c Encoder::isr32()
00029a8c g     F .text.itcm	0000001e FatFile::close()
00022e84 g     F .text.itcm	00000054 AudioFilterLadder::resonance(float)
2001182c g     O .bss	00000014 patchCord216
00039530 g     F .text.itcm	0000009c usb_midi_flush_output
600021dc g       .text.code	00000000 __init_array_end
00013154 g     F .text.itcm	00000090 draw_ENV_ADSR(int, int, int, int, int, int, char const*)
20012c40 g     O .bss	00000020 pl13amp
0002213c g     F .text.itcm	000001b8 AudioControlSGTL5000::enable(unsigned int, unsigned long)
000295f8 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
20012c00 g     O .bss	00000020 pl13FX2
0002b714 g     F .text.itcm	00000124 FatFile::getName8(char*, unsigned int)
000264d4 g     F .text.itcm	000004f0 AudioSynthWaveformModulated::update()
0002c7d8 g     F .text.itcm	0000003e SharedSpiCard::readStop()
00027870 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0002dbdc g     F .text.itcm	00000034 SdSpiArduinoDriver::begin(SdSpiConfig)
000064b4 g     F .text.itcm	00000064 drawOctaveTriangle()
000343c8 g     F .text.itcm	000000d0 USBHost::queue_Data_Transfer(Pipe_struct*, void*, unsigned long, USBDriver*)
20010df8 g     O .bss	00000004 msecsclock
0000f650 g     F .text.itcm	000001e8 NoteFX4_Page1_Dynamic()
000296dc g     F .text.itcm	0000007a ExFatPartition::freeChain(unsigned long)
0003a3e0 g     F .text.itcm	00000078 arm_q15_to_q31
20002a80 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
2000eecc g     O .bss	00000004 FsDateTime::callback
0003aaa0 g     F .text.itcm	00000378 arm_fir_decimate_f32
2001099c g     O .bss	00000038 drymixer1
00037768 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
00034608 g     F .text.itcm	000001f0 USBHost::isr()
000359b4 g     F .text.itcm	0000005c USBHub::send_setreset(unsigned long)
00004fc4 g     F .text.itcm	00000080 show_tempo()
00037f80 g     F .text.itcm	00000080 pinMode
20006d28 g     O .data	00000040 dryVolume
20005f94 g     O .data	00000010 NFX2_ROW1
20011fc0 g     O .bss	00000014 patchCord33
20005fb4 g     O .data	00000010 NFX3_ROW2
20002e68 g     O .data	00000030 vtable for SDClass
00035e58 g     F .text.itcm	00000010 USBHost::allocate_Transfer()
00024434 g     F .text.itcm	00000300 AudioPlayMemory::update()
20022f20 g       .bss	00000000 _ebss
0002dee0 g     F .text.itcm	000000a0 FsUtf::cpToMb(unsigned long, char*, char*)
200109d4 g     O .bss	00000038 drymixer2
00035958 g     F .text.itcm	0000005c USBHub::send_clearstatus_reset(unsigned long)
20002bb4 g     O .data	0000001c vtable for MIDIDeviceBase
00002a40  w    F .text.itcm	00000088 Encoder::isr17()
20011f70 g     O .bss	00000014 patchCord30
00035f90 g     F .text.itcm	0000004a MIDIDeviceBase::timer_event(USBDriverTimer*)
000132c4 g     F .text.itcm	000000d0 change_SVF_frequency(int, int, int, int, int, int, char const*)
00006108 g     F .text.itcm	000000d4 drawActivePolyStepsY(int)
20010a0c g     O .bss	00000038 drymixer3
20011ea8 g     O .bss	00000014 patchCord291
000114f0 g     F .text.itcm	000004ec MixerPage2_Dynamic()
600019ac g     F .text.code	00000002 startup_default_early_hook
000047d4 g     F .text.itcm	00000198 readEncoders()
20012308 g     O .bss	00000014 patchCord71
00022014  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20002d58 g     O .data	0000000c vtable for AudioSynthKarplusStrong
00033c00 g     F .text.itcm	00000010 Adafruit_Keypad::~Adafruit_Keypad()
20011e94 g     O .bss	00000014 patchCord290
20002bdc g     O .data	0000000c vtable for AudioAnalyzePeak
20002af0 g     O .data	00000018 vtable for ILI9341_t3
00029404 g     F .text.itcm	00000068 ExFatFile::hashName(ExName_t*)
2001231c g     O .bss	00000014 patchCord72
20011f98 g     O .bss	00000014 patchCord31
2000ef9c g     O .bss	00000008 AudioOutputI2S::dma
000260ac g     F .text.itcm	0000002e BandLimitedWaveform::generate_sawtooth(unsigned long, int)
200114d0 g     O .bss	00000014 patchCord178
2001236c g     O .bss	00000014 patchCord76
200122f4 g     O .bss	00000014 patchCord70
00000ff8  w    F .text.itcm	000001bc newdigate::ResamplingSdReader::close()
20011110 g     O .bss	00000014 patchCord134
0003aa64 g     F .text.itcm	0000003a arm_fir_decimate_init_f32
20011124 g     O .bss	00000014 patchCord135
200114bc g     O .bss	00000014 patchCord177
000289b4 g     F .text.itcm	00000268 ExFatFile::write(void const*, unsigned int)
20012330 g     O .bss	00000014 patchCord73
200110fc g     O .bss	00000014 patchCord133
00010194 g     F .text.itcm	00000274 Plugin_1_Settings()
00002600  w    F .text.itcm	00000088 Encoder::isr9()
200114a8 g     O .bss	00000014 patchCord176
20016e18 g     O .bss	00000028 playMem10
20022cc8 g     O .bss	00000004 usb_midi_handleStart
200110e8 g     O .bss	00000014 patchCord132
20011fac g     O .bss	00000014 patchCord32
20016e68 g     O .bss	00000028 playMem12
0000496c g     F .text.itcm	0000005e read16(File&)
20012358 g     O .bss	00000014 patchCord75
000153b0 g     F .text.itcm	000000f8 Plugin6_Page_Static()
0003ddd4 g     F .text.itcm	00000090 __kernel_sinf
20011494 g     O .bss	00000014 patchCord175
20011444 g     O .bss	00000014 patchCord171
00041c58 g     F .text.itcm	0000001c _localeconv_r
20011458 g     O .bss	00000014 patchCord172
20012344 g     O .bss	00000014 patchCord74
00000d24  w    F .text.itcm	0000003c AudioPlaySdWav::~AudioPlaySdWav()
0002afcc g     F .text.itcm	0000012c FatFile::remove()
200110d4 g     O .bss	00000014 patchCord131
600017ec g     F .text.code	00000038 TwoWire::configSDApin(unsigned char)
0003a620 g     F .text.itcm	00000444 arm_fir_interpolate_f32
20002cf4 g     O .data	0000001c vtable for AudioControlSGTL5000
20016e40 g     O .bss	00000028 playMem11
20002d64 g     O .data	0000000c vtable for AudioFilterStateVariable
00010f5c g     F .text.itcm	000000c4 FX1reverb_static()
20011480 g     O .bss	00000014 patchCord174
200110c0 g     O .bss	00000014 patchCord130
2000e6b0 g     O .bss	00000110 MIDI
2001146c g     O .bss	00000014 patchCord173
00033bc8 g     F .text.itcm	00000038 Adafruit_Keypad::Adafruit_Keypad(unsigned char*, unsigned char*, unsigned char*, int, int)
20002d10 g     O .data	0000000c vtable for AudioSynthNoiseWhite
200229dc g     O .bss	00000004 scaleSelected
00022bfc g     F .text.itcm	00000074 AudioEffectReverb::clear_buffers()
000001d8  w    F .text.itcm	00000002 USBDriver::control(Transfer_struct const*)
2000ef4c g     O .bss	00000004 AudioStream::unused
20002cac g     O .data	0000000c vtable for AudioEffectReverb
00003844  w    F .text.itcm	00000080 Encoder::update(Encoder_internal_state_t*)
00023f04 g     F .text.itcm	00000158 AudioOutputI2S::isr()
20002b60 g     O .data	0000000c vtable for AudioInputI2S
00001c3c  w    F .text.itcm	0000008c Encoder::isr39()
20012100 g     O .bss	00000014 patchCord48
20014c7c g     O .bss	00000038 pl6envelope2
00036f08 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20014c44 g     O .bss	00000038 pl6envelope1
2001209c g     O .bss	00000014 patchCord43
20022d1f g     O .bss	00000001 AudioStream::update_scheduled
200114e4 g     O .bss	00000014 patchCord179
2001114c g     O .bss	00000014 patchCord137
20012470 g     O .bss	00000014 patchCord88
20022cf4 g     O .bss	00000002 AudioStream::memory_used_max
0001c474  w    F .text.itcm	0000069c newdigate::ResamplingReader<newdigate::IndexableSDFile<128u, 2u>, File>::readNextValue(short*, unsigned short)
00022894 g     F .text.itcm	0000004e AudioEffectEnvelope::noteOn()
00022d48 g     F .text.itcm	000000de AudioFilterBiquad::update()
20011174 g     O .bss	00000014 patchCord139
20011138 g     O .bss	00000014 patchCord136
00081400 g       *ABS*	00000000 _flashimagelen
2000f1b0  w    O .bss	00000004 AudioRecorders::drawAudioPot(float)::peakIn
20012114 g     O .bss	00000014 patchCord49
0002dc70 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
20011160 g     O .bss	00000014 patchCord138
20012b20 g     O .bss	00000020 pl12FX1
200120ec g     O .bss	00000014 patchCord47
20002780 g     O .data	00000100 AudioSynthNoisePink::pfira
20012b40 g     O .bss	00000020 pl12FX2
00022c70 g     F .text.itcm	000000d8 AudioEffectReverb::reverbTime(float)
00025f34 g     F .text.itcm	0000002e BandLimitedWaveform::process_active_steps_saw(unsigned long)
20002b6c g     O .data	0000000c vtable for AudioAmplifier
00037af8 g     F .text.itcm	00000014 random(long, long)
0002e594 g     F .text.itcm	0000000c lpi2c4_isr()
0003dfa0 g     F .text.itcm	00000004 matherr
000269c4 g     F .text.itcm	00000060 BandLimitedWaveform::init_sawtooth(unsigned long)
00035844 g     F .text.itcm	0000005c USBHub::send_clearstatus_enable(unsigned long)
00035db8 g     F .text.itcm	0000000e USBHub::callback(Transfer_struct const*)
20022d20 g     O .bss	00000001 AudioInputI2S::update_responsibility
20022ed6 g     O .bss	00000002 usb_midi_msg_sysex_len
00042420 g     F .fini	00000000 _fini
000228e4 g     F .text.itcm	00000020 AudioEffectEnvelope::noteOff()
0002e138 g     F .text.itcm	0000003a TwoWire::write(unsigned char const*, unsigned int)
000370e0 g     F .text.itcm	00000040 nvic_execution_priority()
200071b0 g     O .data	00000024 trackColor
00003754  w    F .text.itcm	00000058 AudioSynthNoiseWhite::AudioSynthNoiseWhite()
20011f84 g     O .bss	00000014 patchCord300
20011854 g     O .bss	00000014 patchCord218
0003916c g     F .text.itcm	00000024 usb_receive
20011bd8 g     O .bss	00000014 patchCord259
0002a504 g     F .text.itcm	0000000c FatFile::sync()
20012b60 g     O .bss	00000020 pl12FX3
00000000  w      *UND*	00000000 __deregister_frame_info
000270c0  w    F .text.itcm	00000002 SDClass::~SDClass()
0002c600  w    F .text.itcm	00000008 SharedSpiCard::readCSD(csd_t*)
0002769c g     F .text.itcm	00000104 SDClass::begin(unsigned char)
2000effc g     O .bss	00000008 AudioOutputTDM2::dma
20011868 g     O .bss	00000014 patchCord219
00006234 g     F .text.itcm	00000168 drawActivePolyPixelY(int)
20002cdc g     O .data	0000000c vtable for AudioEffectEnvelope
00002358  w    F .text.itcm	00000088 Encoder::isr4()
20022d17 g     O .bss	00000001 NFX4presetNr
20011430 g     O .bss	00000014 patchCord170
20005ff8 g     O .data	0000000c PL2MIX
0002c25c g     F .text.itcm	000000b0 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00033d98 g     F .text.itcm	0000005e Adafruit_Keypad::begin()
00014f20 g     F .text.itcm	000001cc Plugin5_Change()
2000198c g     O .data	00000202 AudioWaveformSine
20012ea0 g     O .bss	00000020 pl16amp2
000282fc g     F .text.itcm	00000150 ExFatFile::syncDir()
6002af38 g     O .text.progmem	00005d04 AudioSampleHihat
0002d4e0 g     F .text.itcm	00000364 SdioCard::begin(SdioConfig)
20022d16 g     O .bss	00000001 NFX3presetNr
200072a0 g     O .data	00000001 cc23
600019ac  w    F .text.code	00000002 startup_early_hook
20005f44 g     O .data	00000040 FX3Volume
20002ebc g     O .data	00000070 vtable for SdioCard
200072a1 g     O .data	00000001 cc24
20014d88 g     O .bss	00000020 pl7amp
0003b048 g     F .text.itcm	000000a0 cos
00002128  w    F .text.itcm	0000008c Encoder::isr48()
600367a0 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
20014ab0 g     O .bss	00000038 pl5envelope2
20006ce0 g     O .data	00000004 __malloc_trim_threshold
2000f1fc g     O .bss	00000020 amp1
0002b9a8 g     F .text.itcm	000000f0 FatPartition::fatGet(unsigned long, unsigned long*)
20014a78 g     O .bss	00000038 pl5envelope1
2000f074 g     O .bss	000000dc Encoder::interruptArgs
00036e54 g     F .text.itcm	00000034 DMAChannel::release()
00013c3c g     F .text.itcm	0000004c change_LDF_frequency(int, int, int, int, int, int, char const*)
20002b24  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
200120b0 g     O .bss	00000014 patchCord44
60036962 g     O .text.progmem	00000001 _serialEvent_default
0000209c  w    F .text.itcm	0000008c Encoder::isr47()
20012484 g     O .bss	00000014 patchCord89
000387c4 g     F .text.itcm	00000060 tempmonGetTemp
200120c4 g     O .bss	00000014 patchCord45
20014cb4 g     O .bss	0000003c pl6filter1
000226a4 g     F .text.itcm	000001f0 AudioEffectEnvelope::update()
0002c818 g     F .text.itcm	00000016 SharedSpiCard::syncDevice()
20006ce4 g     O .data	00000004 _impure_ptr
200120d8 g     O .bss	00000014 patchCord46
0000d3fc g     F .text.itcm	0000042c drumStepSequencer()
200229e4 g     O .bss	00000004 seq_MIDItick
00000d60  w    F .text.itcm	00000044 File::~File()
20006d68 g     O .data	0000000c filterType
0002e2c8 g     F .text.itcm	000000e0 TwoWire::endTransmission(unsigned char)
00036300 g     F .text.itcm	0000000e MIDIDeviceBase::rx_callback(Transfer_struct const*)
00019308 g     F .text.itcm	00000200 stopSeq()
20006d8c g     O .data	00000004 fx3delayFilterFreq_graph
20014c24 g     O .bss	00000020 pl6dry
0003e230 g     F .text.itcm	00000090 floorf
00042424 g       .ARM.exidx	00000000 __exidx_start
00025344 g     F .text.itcm	0000001a AudioRecordQueue::freeBuffer()
0002d2fc g     F .text.itcm	000000c0 SdioCard::writeSector(unsigned long, unsigned char const*)
2000f01c g     O .bss	00000008 AudioInputSPDIF3::dma
0002b684 g     F .text.itcm	00000090 FatFile::getSFN(char*, unsigned int)
00000000 g       .text.itcm	00000000 _stext
000369f0 g     F .text.itcm	000000a8 AudioStream::allocate()
00035e94 g     F .text.itcm	00000010 USBHost::free_string_buffer(strbuf_t*)
00037120 g     F .text.itcm	000002c4 HardwareSerial::begin(unsigned long, unsigned short)
20022c9c g     O .bss	00000004 usb_midi_handleAfterTouch
00031020 g     F .text.itcm	000010cc ILI9341_t3::drawLine(short, short, short, short, unsigned short)
000391fc  w    F .text.itcm	00000004 usb_serial_class::flush()
20014890 g     O .bss	00000038 pl4drummixer1
0003eedc g     F .text.itcm	0000009a memset
20022ed8 g     O .bss	00000001 usb_midi_msg_data2
000150ec g     F .text.itcm	000000f8 Plugin5_Page_Static()
20014e64 g     O .bss	00000038 pl7drum1
20022cf6 g     O .bss	00000002 AudioStream::cpu_cycles_total
60001000 g     O .text.headers	00000020 ImageVectorTable
20022ed9 g     O .bss	00000001 usb_midi_msg_data1
20012828 g     O .bss	00000038 pl10mixer4
0000f990 g     F .text.itcm	00000058 NoteFX5_Page_Static()
20280000 g       .text.csf	00000000 _heap_end
200127f0 g     O .bss	00000038 pl10mixer3
00036a98 g     F .text.itcm	00000054 AudioStream::release(audio_block_struct*)
00001988  w    F .text.itcm	00000088 Encoder::isr2()
000009fc  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
00028ca0 g     F .text.itcm	000000a8 ExFatFormatter::writeUpcase(unsigned long)
00036c7c g     F .text.itcm	00000024 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
70000000 g       .bss.extram	00000000 _extram_end
20014e9c g     O .bss	00000020 pl7dry
000390ac g     F .text.itcm	00000068 usb_config_tx
00026cfc g     F .text.itcm	00000230 SPIClass::begin()
00037b0c g     F .text.itcm	000002c4 set_arm_clock
20006764 g     O .data	00000004 __brkval
20012780 g     O .bss	00000038 pl10mixer1
0003cf70 g     F .text.itcm	0000067c __kernel_rem_pio2
200127b8 g     O .bss	00000038 pl10mixer2
200167b4 g     O .bss	00000190 pl9bpinput
00025fec g     F .text.itcm	000000c0 BandLimitedWaveform::new_step_check_pulse(unsigned long, unsigned long, int)
20022d57 g     O .bss	00000001 usb_high_speed
00035684 g     F .text.itcm	0000005c USBHub::send_poweron(unsigned long)
20015978 g     O .bss	00000020 pl8dry
000308d8 g     F .text.itcm	000003fc ILI9341_t3::begin()
0000f358 g     F .text.itcm	00000220 NoteFX3_Page1_Dynamic()
0002c784 g     F .text.itcm	00000054 SharedSpiCard::readStart(unsigned long)
20010958 g     O .bss	00000038 drummixer4
00011020 g     F .text.itcm	000004cc MixerPage3_Dynamic()
00001590  w    F .text.itcm	00000144 newdigate::IndexableSDFile<128u, 2u>::~IndexableSDFile()
000008cc  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
0003b970 g     F .text.itcm	00000784 __ieee754_pow
20010920 g     O .bss	00000038 drummixer3
600278b0 g     O .text.progmem	00000e84 AudioSampleP2
0001788c g     F .text.itcm	00000178 Plugin8_Page1_Dynamic()
00039190 g     F .text.itcm	00000004 usb_transfer_status
000419ec g     F .text.itcm	0000009c _malloc_trim_r
00004450 g     F .text.itcm	000001c4 drawPot_4(int, unsigned char, unsigned char, int, char*, int)
000391ec  w    F .text.itcm	00000004 usb_serial_class::clear()
00029aac g     F .text.itcm	00000046 FatFile::dirEntry(DirFat_t*)
20014820 g     O .bss	00000030 pl4Pot
20022cdc g     O .bss	00000004 usb_midi_handleTimeCodeQuarterFrame
00001760  w    F .text.itcm	0000008c Encoder::isr53()
0001727c g     F .text.itcm	000001e0 Plugin3_Page1_Dynamic()
20005e6c g     O .data	00000040 ENVELOPE1
0003e750 g     F .text.itcm	00000010 malloc
00041fd4 g     F .text.itcm	000000ae __lshift
00029c98 g     F .text.itcm	000000ce FatFile::mkdir(FatFile*, char const*, bool)
0000e9d4 g     F .text.itcm	000001fc NoteFX1_Page1_Dynamic()
000001e0 g     F .text.itcm	000001ac myNoteOff(int, unsigned char, unsigned char)
00000020 g     F .text.itcm	000000bc irq_gpio6789
00005608 g     F .text.itcm	00000264 drawarrengmentLine(int, unsigned char, unsigned char)
20012c80 g     O .bss	00000020 pl13dry
20007254  w    O .data	00000016 usb_string_serial_number
600019b8 g     F .text.code	000000e4 configure_cache
200125bc g     O .bss	00000020 pl10FX2
0003afa0 g     F .text.itcm	000000a4 arm_add_q31
000270b8  w    F .text.itcm	00000006 SdCardInterface::status()
00037064 g     F .text.itcm	0000007a HardwareSerial::peek()
00007f30 g     F .text.itcm	00000098 stopRecording()
00026fe0 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
200108b0 g     O .bss	00000038 drummixer1
20002e98 g     O .data	00000024 vtable for TwoWire
20022d14 g     O .bss	00000001 NFX1presetNr
00003668  w    F .text.itcm	00000064 AudioSynthWaveform::AudioSynthWaveform()
200108e8 g     O .bss	00000038 drummixer2
2001259c g     O .bss	00000020 pl10FX1
000378dc g     F .text.itcm	00000198 breakTime(unsigned long, DateTimeFields&)
00023984 g     F .text.itcm	000000b8 AudioInputI2S::isr()
000185c4 g     F .text.itcm	00000d44 process_clock()
000028a8  w    F .text.itcm	00000088 Encoder::isr14()
20006d98 g     O .data	00000040 gainPerBar
2000e640 g     O .bss	00000040 LP_grid_bool
0003944c g     F .text.itcm	000000d4 usb_midi_configure
2000e438 g     O .bss	00000038 FX2mixer4
2000f26c g     O .bss	000015d0 dldelay1
0003ee14 g     F .text.itcm	000000c6 memmove
00029630 g     F .text.itcm	00000040 ExFatPartition::fatGet(unsigned long, unsigned long*)
0000639c g     F .text.itcm	000000a4 draw_Clipselector()
0002f698 g     F .text.itcm	000002c8 ILI9341_t3::drawPixel(short, short, unsigned short)
20022cf2 g     O .bss	00000002 AudioStream::memory_used
20006d90 g     O .data	00000004 fx3delayTime
20022d32 g     O .bss	00000001 audio_rec_now
200125dc g     O .bss	00000020 pl10FX3
20012ac0 g     O .bss	00000020 pl11amp
0000145c  w    F .text.itcm	00000134 newdigate::IndexableSDFile<128u, 2u>::~IndexableSDFile()
00000000  w      *UND*	00000000 _Jv_RegisterClasses
000382ac g     F .text.itcm	00000004 operator new(unsigned int)
20002bd0 g     O .data	0000000c vtable for AudioPlayMemory
20022d3e g     O .bss	00000001 octave
00036e88 g     F .text.itcm	00000080 EventResponder::triggerEventNotImmediate()
20022cd8 g     O .bss	00000004 usb_midi_handleSystemReset
000004e8  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00005c00 g     F .text.itcm	000000b8 draw_Notenames()
70000000 g       .bss.extram	00000000 _extram_start
00035464 g     F .text.itcm	00000086 USBHub::disconnect()
2000f154 g     O .bss	00000004 FatVolume::m_cwv
0003f4dc g     F .text.itcm	000000a0 strncmp
00036ca0 g     F .text.itcm	0000009c AudioConnection::disconnect()
0002e00c g     F .text.itcm	000000b4 toUpcase(unsigned short)
00005d3c g     F .text.itcm	0000008c drawActiveDrumSteps()
0003367c g     F .text.itcm	00000010 isrPin()
00004c10 g     F .text.itcm	00000178 drawCursor()
20016738 g     O .bss	00000020 pl9amp
00028684 g     F .text.itcm	000000ae ExFatFile::rename(ExFatFile*, char const*)
00000138  w    F .text.itcm	00000004 Print::availableForWrite()
2000eed8 g     O .bss	00000004 AudioStream::first_update
00002bd8  w    F .text.itcm	00000088 Encoder::isr20()
00014460 g     F .text.itcm	00000140 pl2MIX(int, int, int, int)
00024f78 g     F .text.itcm	000002ec AudioPlaySdWav::update()
00003500  w    F .text.itcm	0000003a File::close()
60028734 g     O .text.progmem	00002804 AudioSampleKick
0003a05c g     F .text.itcm	0000002c usb_serial_putchar
00023a3c g     F .text.itcm	000000a4 AudioInputI2S::update()
00022e28 g     F .text.itcm	0000005c AudioFilterLadder::initpoly()
000034a8  w    F .text.itcm	00000058 AudioStream::AudioStream(unsigned char, audio_block_struct**)
00025ddc g     F .text.itcm	0000007c BandLimitedWaveform::insert_step(int, bool, int)
60002168 g       .text.code	00000000 __preinit_array_end
0002ddb4 g     F .text.itcm	0000000e FsCache::sync()
00012de8 g     F .text.itcm	000000c0 change_ENV_D(int, int, int, int, int, int, char const*)
00000520  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
20022d2e  w    O .bss	00000001 SDFile::name()::zeroterm
00021fd4 g     F .text.itcm	00000040 AudioAnalyzePeak::update()
00001a98  w    F .text.itcm	0000008c Encoder::isr36()
00037f68 g     F .text.itcm	0000000a digitalWrite
20014a30 g     O .bss	00000028 pl5dc1
0001af1c g     F .text.itcm	0000028c Plugin_View_Dynamic()
00003e34  w    F .text.itcm	000000c0 Encoder::Encoder(unsigned char, unsigned char)
0002cf80 g     F .text.itcm	00000054 SdioCard::isBusy()
00003468  w    F .text.itcm	0000001c Print::write(char const*)
00008020 g     F .text.itcm	000000fc Mixer_Settings()
00042398 g     F .text.itcm	0000005e _vasnprintf_r
20012bc0 g     O .bss	00000020 pl12dry
000356e0 g     F .text.itcm	00000066 USBHub::send_getstatus(unsigned long)
00014bd0 g     F .text.itcm	0000012c Plugin3_Page_Static()
00029b14 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
20002c84  w    O .data	00000028 vtable for usb_serial_class
00003ef8 g     F .text.itcm	000001c4 drawPot(int, unsigned char, unsigned char, int, char*, int)
0003920c  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
2000ef98 g     O .bss	00000004 AudioOutputI2S::block_right_2nd
2000e400 g     O .bss	00000038 FX2mixer3
000001d4  w    F .text.itcm	00000002 newdigate::ResamplingSdReader::~ResamplingSdReader()
20012aa0 g     O .bss	00000020 pl11FX3
00027220  w    F .text.itcm	00000062 SDClass::rmdir(char const*)
00017a04 g     F .text.itcm	00000184 Plugin9_Page1_Dynamic()
0002c954 g     F .text.itcm	0000005c SharedSpiCard::writeData(unsigned char const*)
0002c040  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
20022da0 g     O .bss	00000004 systick_safe_read
00021774 g     F .text.itcm	0000059c SmfWriter::flush()
20012a60 g     O .bss	00000020 pl11FX1
20002d4c g     O .data	0000000c vtable for AudioSynthWaveformSine
20012a80 g     O .bss	00000020 pl11FX2
00027030  w    F .text.itcm	00000040 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00006ea0 g     F .text.itcm	00000030 LP_drawStepsequencer()
2000e3c8 g     O .bss	00000038 FX2mixer2
000151e4 g     F .text.itcm	000001cc Plugin6_Change()
200070cc g     O .data	0000000c repeatED
2000e470 g     O .bss	00000038 FX2mixer5
0003b248 g     F .text.itcm	000000d0 scalbnf
00036c50 g     F .text.itcm	0000002c AudioConnection::AudioConnection(AudioStream&, unsigned char, AudioStream&, unsigned char)
00005cb8 g     F .text.itcm	00000084 draw_Drumnotes()
20006d1c g     O .data	0000000c drumnote
0002c0e8  w    F .text.itcm	00000006 SharedSpiCard::end()
0002c610 g     F .text.itcm	00000098 SharedSpiCard::sectorCount()
0003e6e8 g     F .text.itcm	0000000c __cxa_atexit
000086a8 g     F .text.itcm	000003a0 saveMixer()
2000e4a8 g     O .bss	00000038 FX2mixer6
2000e390 g     O .bss	00000038 FX2mixer1
20011c8c g     O .bss	00000014 patchCord267
000009bc  w    F .text.itcm	00000040 AudioPlaySdResmp::~AudioPlaySdResmp()
20011890 g     O .bss	00000014 patchCord220
00027894 g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
20006ce8 g     O .data	00000020 allTracks
00001f84  w    F .text.itcm	0000008c Encoder::isr45()
00036d3c g     F .text.itcm	00000038 AudioConnection::~AudioConnection()
20011c78 g     O .bss	00000014 patchCord266
0002cc30 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
200072a4 g     O .data	00000001 otherCtrlButtons
20006e98 g     O .data	00000080 isr_table_gpio2
000158a4 g     F .text.itcm	000001f0 Plugin9_Change()
60036700 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00013444 g     F .text.itcm	000000cc change_SVF_octaveControl(int, int, int, int, int, int, char const*)
00039194 g     F .text.itcm	00000058 usb_init_serialnumber
00000025 g       *ABS*	00000000 _teensy_model_identifier
20006f18 g     O .data	00000080 isr_table_gpio3
00004b60 g     F .text.itcm	000000b0 SerialPrintPlugins()
20011c64 g     O .bss	00000014 patchCord265
00032d8c g     F .text.itcm	000005b8 ILI9341_t3::drawChar(short, short, unsigned char, unsigned short, unsigned short, unsigned char)
000248c0 g     F .text.itcm	0000027c AudioPlaySdWav::play(char const*)
20011c14 g     O .bss	00000014 patchCord261
0000811c g     F .text.itcm	00000304 mixerPage1_Static(int)
0002ca54  w    F .text.itcm	00000002 SdioCard::end()
0002c830 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20011c50 g     O .bss	00000014 patchCord264
20011c00 g     O .bss	00000014 patchCord260
20006e18 g     O .data	00000080 isr_table_gpio1
00041cc0 g     F .text.itcm	00000012 _Bfree
0002be48 g     F .text.itcm	00000080 FsBaseFile::open(FsVolume*, char const*, int)
20006f98 g     O .data	00000080 isr_table_gpio4
00036b7c g     F .text.itcm	000000d4 AudioConnection::connect()
0003e770 g     F .text.itcm	00000570 _malloc_r
00002468  w    F .text.itcm	00000088 Encoder::isr6()
0003901c g     F .text.itcm	0000002c usb_stop_sof_interrupts
0002954c g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
20011c3c g     O .bss	00000014 patchCord263
20011c28 g     O .bss	00000014 patchCord262
20007018 g     O .data	00000020 master_clock
00037e9c g     F .text.itcm	00000064 micros
20002d7c  w    O .data	0000002c vtable for File
20011944 g     O .bss	00000014 patchCord229
0003cdac g     F .text.itcm	000000a2 __ieee754_sqrtf
200118b8 g     O .bss	00000014 patchCord222
200002d0 g     O .data	00000028 __mprec_bigtens
20011cb4 g     O .bss	00000014 patchCord269
00035e68 g     F .text.itcm	00000010 USBHost::free_Transfer(Transfer_struct*)
0003ef80 g     F .text.itcm	000003de _realloc_r
200118a4 g     O .bss	00000014 patchCord221
000347f8 g     F .text.itcm	00000274 USBHost::allocate_interrupt_pipe_bandwidth(Pipe_struct*, unsigned long, unsigned long)
20022d39 g     O .bss	00000001 external_psram_size
20011ca0 g     O .bss	00000014 patchCord268
000282a0 g     F .text.itcm	0000005a ExFatFile::rmdir()
200118e0 g     O .bss	00000014 patchCord224
00005f54 g     F .text.itcm	00000184 drawActivePolyPixel()
2000f05c g     O .bss	00000008 AudioOutputI2SQuad::dma
20022cc0 g     O .bss	00000004 usb_midi_handleSongPosition
200118cc g     O .bss	00000014 patchCord223
0002d208 g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
0003ece0 g     F .text.itcm	0000002a __ascii_mbtowc
20013000 g     O .bss	00000190 pl1waveform1
00025f64 g     F .text.itcm	00000088 BandLimitedWaveform::new_step_check_square(unsigned long, int)
00034138 g     F .text.itcm	00000074 USBDriverTimer::stop()
60002118 g     F .text.code	00000000 _init
0002cc40  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0002cfd4 g     F .text.itcm	000000d4 SdioCard::erase(unsigned long, unsigned long)
20022d3c g     O .bss	00000001 maxVal
20016944 g     O .bss	00000020 pl9dry
00035dc8 g     F .text.itcm	00000050 USBHost::init_Device_Pipe_Transfer_memory()
20022d02 g     O .bss	00000002 AudioSynthNoisePink::instance_cnt
2000f00c g     O .bss	00000008 AudioInputI2SHex::dma
20016964 g     O .bss	00000038 pl9mixer1
0000d828 g     F .text.itcm	000006b0 melodicStepSequencer(int)
20012f60 g     O .bss	00000020 pl1amp2
00012600 g     F .text.itcm	00000084 change_OSC_frequency(int, int, int, int, float, float, char const*)
60001770 g     F .text.code	0000007c TwoWire::setSDA(unsigned char)
20010b7c g     O .bss	00000120 kpd
20022cfc g     O .bss	00000002 AudioInputI2S::block_offset
0003b188 g     F .text.itcm	00000056 ldexpf
000391f4  w    F .text.itcm	00000004 usb_serial_class::read()
000357e8 g     F .text.itcm	0000005c USBHub::send_clearstatus_connect(unsigned long)
20007254 g     O .data	00000016 usb_string_serial_number_default
00021e98 g     F .text.itcm	00000022 SmfWriter::addNoteOffEvent(unsigned int, unsigned char, unsigned char)
00027970 g     F .text.itcm	000001b2 ExFatFile::read(void*, unsigned int)
0003b1e0 g     F .text.itcm	00000068 modff
0003d5f0 g     F .text.itcm	000000b0 __kernel_sin
2000f064 g     O .bss	00000008 AudioOutputPT8211_2::dma
2000e7d4 g     O .bss	00000010 Potentiometer
00005ee8 g     F .text.itcm	0000006c clearPixelGrid()
0003a368 g     F .text.itcm	00000078 arm_q31_to_q15
20012088 g     O .bss	00000014 patchCord42
0003c0f8 g     F .text.itcm	0000029c __ieee754_rem_pio2
20017008 g     O .bss	00000274 playSdWav1
0002a04c g     F .text.itcm	00000042 FatFile::readDirCache(bool)
0003b3b0 g     F .text.itcm	00000280 pow
00000850  w    F .text.itcm	00000044 SDFile::truncate(unsigned long long)
0002c5c0 g     F .text.itcm	0000003e SharedSpiCard::readRegister(unsigned char, void*)
0003e324 g     F .text.itcm	00000024 .hidden __fixsfdi
000358a0 g     F .text.itcm	0000005c USBHub::send_clearstatus_suspend(unsigned long)
000224dc g     F .text.itcm	000001c8 AudioEffectDelay::update()
00000af8  w    F .text.itcm	00000040 SDFile::~SDFile()
000298b4 g     F .text.itcm	0000003a ExFatPartition::rootLength()
200123f8 g     O .bss	00000014 patchCord82
00022120 g     F .text.itcm	0000001a AudioControlSGTL5000::lineInLevel(unsigned char, unsigned char)
20010b34 g     O .bss	00000004 fx3delayFilterReso_graph
200123d0 g     O .bss	00000014 patchCord80
0000c774 g     F .text.itcm	00000460 loadbutton()
0002740c  w    F .text.itcm	0000003c SDClass::totalSize()
20012e80 g     O .bss	00000020 pl16amp
2001261c g     O .bss	00000020 pl10amp2
2001240c g     O .bss	00000014 patchCord83
20226560 g     O .bss.dma	00000095 usb_descriptor_buffer
20012060 g     O .bss	00000014 patchCord40
0002844c g     F .text.itcm	0000005e ExFatFile::sync()
00026fb4 g     F .text.itcm	0000002c SPIClass::usingInterrupt(IRQ_NUMBER_t)
00036b38 g     F .text.itcm	00000042 AudioStream::receiveWritable(unsigned int)
200113cc g     O .bss	00000014 patchCord166
20010ff8 g     O .bss	00000014 patchCord121
200123e4 g     O .bss	00000014 patchCord81
2001245c g     O .bss	00000014 patchCord87
200113b8 g     O .bss	00000014 patchCord165
20012574 g     O .bss	00000024 peak1
20010fe4 g     O .bss	00000014 patchCord120
20012420 g     O .bss	00000014 patchCord84
20022d22 g     O .bss	00000001 EventResponder::runningFromYield
00029b34 g     F .text.itcm	00000162 FatFile::mkdir(FatFile*, FatLfn_t*)
200113a4 g     O .bss	00000014 patchCord164
00004d88 g     F .text.itcm	00000178 drawCursorPixel()
20012074 g     O .bss	00000014 patchCord41
0002cd0c g     F .text.itcm	00000020 SdioCard::type() const
000016d4  w    F .text.itcm	0000008c Encoder::isr52()
20011354 g     O .bss	00000014 patchCord160
0002daa0 g     F .text.itcm	0000002c SdioCard::syncDevice()
20012448 g     O .bss	00000014 patchCord86
20011390 g     O .bss	00000014 patchCord163
2000ef8c g     O .bss	00000004 AudioOutputI2S::block_left_1st
20006010 g     O .data	00000008 PWM
20012434 g     O .bss	00000014 patchCord85
00001900  w    F .text.itcm	00000088 Encoder::isr1()
2001137c g     O .bss	00000014 patchCord162
00016ec4 g     F .text.itcm	00000198 Plugin10_Page_Static()
00029670 g     F .text.itcm	00000046 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00015f38 g     F .text.itcm	00000b58 setup
00034afc g     F .text.itcm	0000016c USBHost::new_Pipe(Device_struct*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
20011368 g     O .bss	00000014 patchCord161
0002a660 g     F .text.itcm	000001f8 FatFile::write(void const*, unsigned int)
0002a510 g     F .text.itcm	000000d6 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
60001020 g     O .text.headers	0000000c BootData
00026ab8 g     F .text.itcm	00000014 BandLimitedWaveform::BandLimitedWaveform()
00030234 g     F .text.itcm	00000288 ILI9341_t3::setRotation(unsigned char)
20022c50 g     O .bss	00000004 tick_16
00002798  w    F .text.itcm	00000088 Encoder::isr12()
00009084 g     F .text.itcm	00000278 loadTrack(char*, int)
200012d0 g     O .data	0000001c Arial_8
200229f8 g     O .bss	00000004 systick_cycle_count
00041cd4 g     F .text.itcm	00000080 __multadd
00039114 g     F .text.itcm	0000002e usb_prepare_transfer
00016a90 g     F .text.itcm	00000434 Plugin10_Change()
20012560 g     O .bss	00000014 patchCord99
200121c8 g     O .bss	00000014 patchCord57
20011020 g     O .bss	00000014 patchCord123
200113f4 g     O .bss	00000014 patchCord168
20002b90 g     O .data	00000024 vtable for HardwareSerial
0002a380 g     F .text.itcm	000000d6 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
2001100c g     O .bss	00000014 patchCord122
200015f4 g     O .data	0000001c Arial_9
00001de0  w    F .text.itcm	0000008c Encoder::isr42()
200113e0 g     O .bss	00000014 patchCord167
0001c384  w    F .text.itcm	000000ee newdigate::ResamplingSdReader::getSourceBufferValue(long)
00034a6c g     F .text.itcm	00000090 USBHost::add_qh_to_periodic_schedule(Pipe_struct*)
20011048 g     O .bss	00000014 patchCord125
20012164 g     O .bss	00000014 patchCord52
20011034 g     O .bss	00000014 patchCord124
000001dc  w    F .text.itcm	00000002 USBDriver::Task()
20012510 g     O .bss	00000014 patchCord95
00012bbc g     F .text.itcm	00000040 change_OSC_DRUM_pitchMod(int, int, int, int, float, float, char const*)
00042428 g       .text.itcm	00000000 _etext
200121dc g     O .bss	00000014 patchCord58
200150bc g     O .bss	00000038 pl7mixer4
20011408 g     O .bss	00000014 patchCord169
200121f0 g     O .bss	00000014 patchCord59
200121b4 g     O .bss	00000014 patchCord56
20012e20 g     O .bss	00000020 pl16FX1
000374bc g     F .text.itcm	00000166 HardwareSerial::IRQHandler()
00027554 g     F .text.itcm	00000148 SDClass::mediaPresent()
20022cc4 g     O .bss	00000004 usb_midi_handleSongSelect
20012e60 g     O .bss	00000020 pl16FX3
0003768c g     F .text.itcm	0000001e Print::printf(char const*, ...)
20012f00 g     O .bss	00000020 pl1FX2
00007424 g     F .text.itcm	000000a4 detect_and_assign_midi_devices()
20015084 g     O .bss	00000038 pl7mixer3
20022d4a g     O .bss	00000001 showSerialonce
2001504c g     O .bss	00000038 pl7mixer2
0002bf2c g     F .text.itcm	000000e8 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
20012ee0 g     O .bss	00000020 pl1FX1
20012d00 g     O .bss	00000020 pl14amp
00033df8 g     F .text.itcm	00000016 Adafruit_Keypad::available()
20010a50 g     O .bss	00000004 enc_moved
600018a8 g     F .text.code	0000003c TwoWire::configSCLpin(unsigned char)
000382c0 g     F .text.itcm	0000004e ultoa
0002b588 g     F .text.itcm	000000d0 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
2000ef84 g     O .bss	00000008 AudioInputTDM2::dma
0002c060 g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
0002e0c0  w    F .text.itcm	0000000c TwoWire::available()
00015d84 g     F .text.itcm	000000d0 Plugin9_Page_Static()
00036f50 g     F .text.itcm	00000020 systick_isr
2000f260 g     O .bss	00000004 channel1Clip
20012e40 g     O .bss	00000020 pl16FX2
20014f9c g     O .bss	0000003c pl7filter1
20002be8 g     O .data	0000000c vtable for AudioEffectDelay
20015014 g     O .bss	00000038 pl7mixer1
00003350  w    F .text.itcm	0000008c Encoder::isr34()
20014fd8 g     O .bss	0000003c pl7filter2
200118f4 g     O .bss	00000014 patchCord225
60001fd8 g     F .text.code	000000ec usb_init
00024b3c g     F .text.itcm	00000070 AudioPlaySdWav::parse_format()
20022cd4 g     O .bss	00000004 usb_midi_handleSysExPartial
20011908 g     O .bss	00000014 patchCord226
00035748 g     F .text.itcm	000000a0 USBHub::timer_event(USBDriverTimer*)
00002f08  w    F .text.itcm	00000088 Encoder::isr26()
2001191c g     O .bss	00000014 patchCord227
200070d8 g     O .data	00000034 scaleNames
20011930 g     O .bss	00000014 patchCord228
0002f62c g     F .text.itcm	0000006c ILI9341_t3::ILI9341_t3(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
60036828 g     O .text.progmem	00000095 usb_config_descriptor_12
20012524 g     O .bss	00000014 patchCord96
00028c1c g     F .text.itcm	00000028 ExFatFormatter::syncUpcase()
00002ac8  w    F .text.itcm	00000088 Encoder::isr18()
20006218 g     O .data	00000004 REVERB
20003088 g     O .data	00000004 _global_impure_ptr
20000000 g       .data	00000000 _sdata
00002710  w    F .text.itcm	00000088 Encoder::isr11()
20012538 g     O .bss	00000014 patchCord97
0000ebd0 g     F .text.itcm	000001b4 NoteFX2_Control()
0002d900 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
00036c7c g     F .text.itcm	00000024 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
00034f88 g     F .text.itcm	00000080 USBHost::convertStringDescriptorToASCIIString(unsigned char, Device_struct*, Transfer_struct const*)
2001254c g     O .bss	00000014 patchCord98
20012fc8 g     O .bss	00000038 pl1mixer2
0000038c  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::~MidiInterface()
0002c8a4 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
00002578  w    F .text.itcm	00000088 Encoder::isr8()
200229fc g     O .bss	00000004 systick_millis_count
0003e348 g     F .text.itcm	00000048 .hidden __fixunssfdi
000270ac  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
00024bac g     F .text.itcm	000003cc AudioPlaySdWav::consume(unsigned long)
aaabffff g       *ABS*	00000000 _flexram_bank_config
00023780 g     F .text.itcm	000000f0 AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)
00037dd0 g     F .text.itcm	000000cc delay
000336e4 g     F .text.itcm	00000048 XPT2046_Touchscreen::begin(SPIClass&)
00041a88 g     F .text.itcm	000001d0 _free_r
00040b9c g     F .text.itcm	000000a4 __register_exitproc
20007400 g     O .data	000002c0 _VectorsRam
20012178 g     O .bss	00000014 patchCord53
00026fe8 g     F .text.itcm	00000048 SPIClass::end()
000223ec g     F .text.itcm	000000f0 AudioEffectBitcrusher::update()
2001218c g     O .bss	00000014 patchCord54
0002e108 g     F .text.itcm	00000030 TwoWire::write(unsigned char)
000270b4  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
200121a0 g     O .bss	00000014 patchCord55
00004f00 g     F .text.itcm	00000038 clearWorkSpace()
00008420 g     F .text.itcm	00000144 mixerPage2_Static()
200128d0 g     O .bss	00000190 pl10waveform1
00022038  w    F .text.itcm	00000004 AudioControlSGTL5000::disable()
0002c050 g     F .text.itcm	00000010 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
20013fe0 g     O .bss	00000020 pl2FX1
20017c4c g     O .bss	00000274 playSdWav3
600021dc g     O .text.progmem	00003904 AudioSampleClap
0000e178 g     F .text.itcm	00000188 loadFX1()
20005998 g     O .data	0000006c usb_descriptor_list
200179d8 g     O .bss	00000274 playSdWav2
0000f838 g     F .text.itcm	00000098 drawActiveRatchetSteps()
00021e2c g     F .text.itcm	00000048 SmfWriter::addEvent(unsigned int, unsigned char*, unsigned int)
0002c9b0 g     F .text.itcm	00000064 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00033e10 g     F .text.itcm	000000c6 Adafruit_Keypad::read()
20022cb0 g     O .bss	00000004 usb_midi_handleNoteOn
20022ce0 g     O .bss	00000004 usb_midi_handleTuneRequest
00026108 g     F .text.itcm	0000004c BandLimitedWaveform::generate_pulse(unsigned long, unsigned long, int)
20022cd0 g     O .bss	00000004 usb_midi_handleSysExComplete
00038fe8 g     F .text.itcm	00000034 usb_start_sof_interrupts
00024758 g     F .text.itcm	0000002a AudioPlaySdWav::begin()
2000e680 g     O .bss	00000004 LP_grid_notes
000046f0 g     F .text.itcm	000000e4 readTouchinput()
200071d4 g     O .data	00000020 trackNames_long
000040c0 g     F .text.itcm	000001c4 drawPot_2(int, unsigned char, unsigned char, int, char*, int)
20000000 g     O .data	00000280 endpoint_queue_head
00026f5c g     F .text.itcm	00000058 SPIClass::setCS(unsigned char)
20012f20 g     O .bss	00000020 pl1FX3
00019508 g     F .text.itcm	00000b84 readMainButtons()
00022904 g     F .text.itcm	00000060 AudioEffectReverb::_do_comb_apf(AudioEffectReverb::comb_apf*, long*, long*)
0002e174 g     F .text.itcm	00000118 TwoWire::force_clock()
20014938 g     O .bss	00000038 pl4drummixer4
00036988 g     F .text.itcm	00000068 software_isr()
00035e48 g     F .text.itcm	00000010 USBHost::free_Pipe(Pipe_struct*)
20014900 g     O .bss	00000038 pl4drummixer3
2000f04c g     O .bss	00000008 AudioOutputSPDIF2::dma
200149d0 g     O .bss	00000020 pl5FX3
0003de64 g     F .text.itcm	0000000e fabs
000032c4  w    F .text.itcm	0000008c Encoder::isr33()
00025d8c g     F .text.itcm	00000050 BandLimitedWaveform::lookup(int)
2000f054 g     O .bss	00000008 AudioOutputSPDIF3::dma
00001cc8  w    F .text.itcm	0000008c Encoder::isr40()
200149b0 g     O .bss	00000020 pl5FX2
0003e0d8 g     F .text.itcm	0000011c scalbn
200148c8 g     O .bss	00000038 pl4drummixer2
000074c8 g     F .text.itcm	00000100 midiCC_view_Static(int, unsigned char)
000236e4 g     F .text.itcm	0000009a AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)
20022eda g     O .bss	00000001 usb_midi_msg_channel
2000729c g     O .data	00000001 MasterVol_graph
0003a0a0 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00039e84 g     F .text.itcm	000000ec usb_serial_read
20012c60 g     O .bss	00000020 pl13amp2
0002cbe0 g     F .text.itcm	0000000c SdioCard::errorCode() const
00035e78 g     F .text.itcm	0000001c USBHost::allocate_string_buffer()
00029e7c g     F .text.itcm	0000000c FatFile::openRoot(FatVolume*)
2000f1e0 g     O .bss	00000004 __malloc_max_total_mem
0003e674  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
2000f004 g     O .bss	00000008 AudioInputAnalog::dma
0000f248 g     F .text.itcm	00000110 NoteFX3_Page_Static()
20002d34 g     O .data	0000000c vtable for AudioEffectBitcrusher
200190f4 g     O .bss	00000004 ratchet
00012c8c g     F .text.itcm	000000c0 change_ENV_A(int, int, int, int, int, int, char const*)
200229e8 g     O .bss	00000004 serialMIDI
20022c70 g     O .bss	00000008 track3
20018b04 g     O .bss	00000274 playSdWav9
2000ef7c g     O .bss	00000008 AudioInputPDM2::dma
2000a5e0 g     O .bss	00000700 midi04
00014e54 g     F .text.itcm	000000cc Plugin4_Page_Static()
20022c78 g     O .bss	00000008 track4
20018890 g     O .bss	00000274 playSdWav8
2000ace0 g     O .bss	00000700 midi05
000341ac g     F .text.itcm	000000dc USBHost::queue_Transfer(Pipe_struct*, Transfer_struct*)
2000704c g     O .data	00000030 noteNames
0003406c g     F .text.itcm	000000cc USBDriverTimer::start(unsigned long)
2001105c g     O .bss	00000014 patchCord126
000029b8  w    F .text.itcm	00000088 Encoder::isr16()
20011070 g     O .bss	00000014 patchCord127
20002f84 g     O .data	00000101 _ctype_
00013910 g     F .text.itcm	000000c0 draw_SVF_Type(int, int, int, int, int, int, char const*)
0000ed84 g     F .text.itcm	000000f8 NoteFX2_Page_Static()
0002aee8 g     F .text.itcm	000000e4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20011084 g     O .bss	00000014 patchCord128
20022c58 g     O .bss	00000008 track0
0002cdc0 g     F .text.itcm	00000020 SdioCard::status()
0002a2d0 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0003e2f4 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
0002ccb8  w    F .text.itcm	0000000e SdioCard::~SdioCard()
20011098 g     O .bss	00000014 patchCord129
20022c88 g     O .bss	00000008 track6
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
2000bae0 g     O .bss	00000700 midi07
20007218 g     O .data	00000014 ts
600019b0  w    F .text.code	00000002 startup_middle_hook
000254a4 g     F .text.itcm	000000e8 AudioSynthKarplusStrong::update()
20022c80 g     O .bss	00000008 track5
000184fc g     F .text.itcm	00000050 Plugin16_Page1_Dynamic()
2000b3e0 g     O .bss	00000700 midi06
20014990 g     O .bss	00000020 pl5FX1
20012d60 g     O .bss	00000020 pl15FX1
0002b294 g     F .text.itcm	00000124 FatFormatter::makeFat16()
00003e34  w    F .text.itcm	000000c0 Encoder::Encoder(unsigned char, unsigned char)
200183a8 g     O .bss	00000274 playSdWav6
20012d80 g     O .bss	00000020 pl15FX2
2000efc8 g     O .bss	00000004 EventResponder::lastInterrupt
20022d60 g     O .bss	00000020 endpoint0_transfer_data
2001861c g     O .bss	00000274 playSdWav7
60030c3c g     O .text.progmem	00005ac4 AudioSampleCashregister
20018134 g     O .bss	00000274 playSdWav5
2001442c g     O .bss	00000394 pl3waveformMod1
0003a458 g     F .text.itcm	00000190 arm_float_to_q31
20017ec0 g     O .bss	00000274 playSdWav4
200072a6 g     O .data	00000001 yield_active_check_flags
20002e4c g     O .data	0000001c vtable for USBHub
20022c90 g     O .bss	00000008 track7
00002df8  w    F .text.itcm	00000088 Encoder::isr24()
60001e58 g     F .text.code	00000064 usb_pll_start
000036cc  w    F .text.itcm	00000088 AudioSynthWaveformModulated::AudioSynthWaveformModulated()
20022d49 g     O .bss	00000001 seq_rec
000037ac  w    F .text.itcm	00000098 AudioPlaySdResmp::AudioPlaySdResmp()
20010df4 g     O .bss	00000004 msecs
000252bc g     F .text.itcm	0000004a AudioRecordQueue::clear()
2000c1e0 g     O .bss	00000700 midi08
20010ca0 g     O .bss	00000004 launchpad
2000c8e0 g     O .bss	00000700 midi09
0002f960 g     F .text.itcm	0000001e ILI9341_t3::drawFastVLine(short, short, short, unsigned short)
0000014c  w    F .text.itcm	0000000c File::available()
20012da0 g     O .bss	00000020 pl15FX3
00003754  w    F .text.itcm	00000058 AudioSynthNoiseWhite::AudioSynthNoiseWhite()
0000353c  w    F .text.itcm	000000c4 SDClass::open(char const*, unsigned char)
0002a090 g     F .text.itcm	000001e4 FatFile::rename(FatFile*, char const*)
00030218 g     F .text.itcm	0000001c ILI9341_t3::fillScreen(unsigned short)
20022d33 g     O .bss	00000001 audio_rec_rec
00034e84 g     F .text.itcm	00000028 USBHost::Task()
00027b50 g     F .text.itcm	00000108 ExFatFile::seekSet(unsigned long long)
200002f8 g     O .data	000000c8 __mprec_tens
0002811c g     F .text.itcm	00000032 ExFatFile::openNext(ExFatFile*, int)
00001bb0  w    F .text.itcm	0000008c Encoder::isr38()
00025e98 g     F .text.itcm	00000038 BandLimitedWaveform::process_step(int)
00040af0 g     F .text.itcm	0000004a _vdprintf_r
20010a54 g     O .bss	00000010 encoded
2000f268 g     O .bss	00000004 detune_mapped
0001c300  w    F .text.itcm	00000082 void std::vector<newdigate::indexedbuffer*, std::allocator<newdigate::indexedbuffer*> >::_M_emplace_back_aux<newdigate::indexedbuffer* const&>(newdigate::indexedbuffer* const&)
0003a284  w    F .text.itcm	00000002 serialEvent()
0002e28c g     F .text.itcm	0000003c TwoWire::wait_idle()
0002e638  w    F .text.itcm	0000010c SPIClass::beginTransaction(SPISettings)
200068d4 g     O .data	00000408 __malloc_av_
20022ca4 g     O .bss	00000004 usb_midi_handleContinue
60036824 g     O .text.progmem	00000004 string0
0003c394 g     F .text.itcm	00000184 __ieee754_sqrt
000051c0 g     F .text.itcm	000003b4 bmpDraw(char const*, unsigned char, unsigned short)
20000798 g     O .data	0000001c Arial_12
0002d100 g     F .text.itcm	00000078 SdioCard::readStop()
20010878 g     O .bss	00000038 dlmixer1
20014170 g     O .bss	00000028 pl3dc1
20022d24 g     O .bss	00000001 USBHub::reset_busy
0003e674  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
200003dc g     O .data	0000001c Arial_10
000008b0  w    F .text.itcm	0000001a SDFile::size()
2000ef64 g     O .bss	00000008 AudioInputPDM::dma
20022cb8 g     O .bss	00000004 usb_midi_handleProgramChange
0002235c g     F .text.itcm	0000006e AudioControlSGTL5000::volumeInteger(unsigned int)
20002b78 g     O .data	0000000c vtable for AudioOutputI2S
60001a9c g     F .text.code	000003bc configure_external_ram
2000f1e4 g     O .bss	00000004 __malloc_top_pad
20010ae4 g     O .bss	0000003c filter1
00005044 g     F .text.itcm	000000e8 drawbarPosition()
20022d3d g     O .bss	00000001 maxValIndex
20022a00 g     O .bss	00000050 tft
20022c68 g     O .bss	00000008 track2
000353e0 g     F .text.itcm	00000084 USBHost::disconnect_Device(Device_struct*)
0003e1f4 g     F .text.itcm	00000018 copysignf
20012b80 g     O .bss	00000020 pl12amp
2000ef74 g     O .bss	00000008 AudioInputI2S2::dma
000034a8  w    F .text.itcm	00000058 AudioStream::AudioStream(unsigned char, audio_block_struct**)
20022c60 g     O .bss	00000008 track1
000060d8 g     F .text.itcm	00000030 clearPolyGridY(int)
2000710c g     O .data	00000034 scaleNamesShort
20005f90 g     O .data	00000004 MasterVol
0000f578 g     F .text.itcm	000000d8 NoteFX4_Page_Static()
20022d80 g     O .bss	00000020 endpoint0_transfer_ack
0002a458 g     F .text.itcm	000000ac FatFile::openNext(FatFile*, int)
2000e224 g     O .bss	0000001c Enc4
000157b0 g     F .text.itcm	000000f4 Plugin8_Page_Static()
000299d8 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
00039204  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
200147e0 g     O .bss	00000020 pl4FX2
20005e48 g     O .data	00000020 DC
20022cfa g     O .bss	00000002 AudioStream::memory_pool_first_mask
00027070  w    F .text.itcm	0000003c FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
20010990 g     O .bss	0000000c drumnotes
200147c0 g     O .bss	00000020 pl4FX1
20022d55 g     O .bss	00000001 usb_cdc_line_rtsdtr
000124c8 g     F .text.itcm	00000058 Encoder2_to_4x127(int, int, int)
20022d04 g     O .bss	00000002 AudioSynthNoiseWhite::instance_count
00015e54 g     F .text.itcm	000000e4 Plugin_10_Settings()
200110ac g     O .bss	00000014 patchCord13
00000158  w    F .text.itcm	00000010 File::peek()
0000fca0 g     F .text.itcm	000004f4 NoteFX8_Page1_Dynamic()
200141f0 g     O .bss	00000038 pl3envelope2
0003e21c g     F .text.itcm	00000014 finitef
00023ca0 g     F .text.itcm	00000000 memcpy_tointerleaveLR
60001ebc g     F .text.code	0000011c tempmon_init
20022d4c g     O .bss	00000001 songpages
200141b8 g     O .bss	00000038 pl3envelope1
00026bb4  w    F .text.itcm	0000001c EventResponder::triggerEvent(int, void*)
00002240  w    F .text.itcm	0000008c Encoder::isr50()
20010e18 g     O .bss	00000014 patchCord10
20010dfc g     O .bss	00000004 nfx6_MIDItick
20011980 g     O .bss	00000014 patchCord231
20010fd0 g     O .bss	00000014 patchCord12
00008cd8 g     F .text.itcm	000000b8 saveMIDItrackDrum()
000385fc g     F .text.itcm	00000190 unused_interrupt_vector
00027320  w    F .text.itcm	000000ea SDClass::usedSize()
2001196c g     O .bss	00000014 patchCord230
000385c8 g     F .text.itcm	00000030 rtc_get
00035f64 g     F .text.itcm	00000024 MIDIDeviceBase::tx_callback(Transfer_struct const*)
20011d40 g     O .bss	00000014 patchCord275
0001854c  w    F .text.itcm	00000078 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::send(midi::MidiType, unsigned char, unsigned char, unsigned char)
00032bc4 g     F .text.itcm	000001c8 ILI9341_t3::fillTriangle(short, short, short, short, short, short, unsigned short)
2000f1b4 g     O .bss	00000028 __malloc_current_mallinfo
20011d54 g     O .bss	00000014 patchCord276
20014800 g     O .bss	00000020 pl4FX3
20012ca0 g     O .bss	00000020 pl14FX1
000001c0  w    F .text.itcm	00000012 SDFile::isOpen()
20011d2c g     O .bss	00000014 patchCord274
0002c30c g     F .text.itcm	000001a0 SharedSpiCard::begin(SdSpiConfig)
20011340 g     O .bss	00000014 patchCord16
20010ef4 g     O .bss	00000014 patchCord11
00018338 g     F .text.itcm	000001c4 Plugin1_Page2_Dynamic()
00026acc g     F .text.itcm	000000e8 AudioSynthNoiseWhite::update()
20011d18 g     O .bss	00000014 patchCord273
0002fd18 g     F .text.itcm	00000500 ILI9341_t3::fillRect(short, short, short, short, unsigned short)
000376cc g     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char)
00000000  w      *UND*	00000000 __register_frame_info
20011188 g     O .bss	00000014 patchCord14
0002aa38 g     F .text.itcm	0000015c FatFile::makeSFN(FatLfn_t*)
2000e1cc g     O .bss	00000003 AudioRecorder
0002405c g     F .text.itcm	00000098 AudioOutputI2S::update()
0001cb10  w    F .text.itcm	00000214 AudioPlayResmp<newdigate::ResamplingSdReader>::update()
20014150 g     O .bss	00000020 pl3amp2
20011cdc g     O .bss	00000014 patchCord270
00029e44 g     F .text.itcm	00000038 FatFile::openCluster(FatFile*)
00035e38 g     F .text.itcm	00000010 USBHost::allocate_Pipe()
20005f8c g     O .data	00000004 LADDERFILTER
2000ef6c g     O .bss	00000008 AudioInputTDM::dma
20012cc0 g     O .bss	00000020 pl14FX2
00000a24  w    F .text.itcm	0000005a StreamFile<FsBaseFile, unsigned long long>::available()
20011d04 g     O .bss	00000014 patchCord272
00039fb4 g     F .text.itcm	00000014 usb_serial_available
00000d24  w    F .text.itcm	0000003c AudioPlaySdWav::~AudioPlaySdWav()
20012ce0 g     O .bss	00000020 pl14FX3
0002558c g     F .text.itcm	00000482 AudioSynthNoisePink::update()
0004242c g       .ARM.exidx	00000000 __exidx_end
20014b5c g     O .bss	00000020 pl6FX1
20011cf0 g     O .bss	00000014 patchCord271
20022ce8 g     O .bss	00000004 usb_timer0_callback
2000675c  w    O .data	00000004 AudioRecorders::drawOscilloscope(float)::posX_old
20002b48 g     O .data	0000000c vtable for AudioMixer4
20005e44 g     O .data	00000004 BITCRUSHER
20000c20 g     O .data	0000001c Arial_16
00036aec g     F .text.itcm	00000034 AudioStream::transmit(audio_block_struct*, unsigned char)
000252a4 g     F .text.itcm	00000016 AudioRecordQueue::available()
200072a2 g     O .data	00000001 end_of_loop
20011264 g     O .bss	00000014 patchCord15
0003e2e8 g     F .text.itcm	0000000a __aeabi_atexit
00035008 g     F .text.itcm	000000f4 USBHost::claim_drivers(Device_struct*)
00000710  w    F .text.itcm	00000044 SDFile::rewindDirectory()
000270b0  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
0002f980 g     F .text.itcm	00000398 ILI9341_t3::drawFastHLine(short, short, short, unsigned short)
20011994 g     O .bss	00000014 patchCord232
200119a8 g     O .bss	00000014 patchCord233
00035b60 g     F .text.itcm	00000032 USBHub::send_setinterface()
20011d7c g     O .bss	00000014 patchCord278
20014130 g     O .bss	00000020 pl3amp
20010c9c g     O .bss	00000004 lastPotRow
20002d28 g     O .data	0000000c vtable for AudioSynthWaveformDc
0002a024 g     F .text.itcm	00000028 FatFile::peek()
20022d06 g     O .bss	00000002 dma_channel_allocated_mask
20011d68 g     O .bss	00000014 patchCord277
20022ce4 g     O .bss	00000004 usb_midi_handleVelocityChange
000059a0 g     F .text.itcm	00000090 draw_start_of_loop()
200119d0 g     O .bss	00000014 patchCord235
00028560 g     F .text.itcm	0000004c ExFatFile::mkdir(ExFatFile*, ExName_t*)
2000ef58 g     O .bss	00000004 AudioInputI2S::block_right
200071f4 g     O .data	00000024 trackNames_short
200119bc g     O .bss	00000014 patchCord234
20011d90 g     O .bss	00000014 patchCord279
0000098c  w    F .text.itcm	00000030 AudioPlaySdResmp::~AudioPlaySdResmp()
20014b24 g     O .bss	00000038 pl5mixer1
00022f2c g     F .text.itcm	000000d4 AudioFilterLadder::compute_coeffs(float)
2022aa00 g       .bss.dma	00000000 _heap_start
00000af8  w    F .text.itcm	00000040 SDFile::~SDFile()
20014b7c g     O .bss	00000020 pl6FX2
0002b234 g     F .text.itcm	0000005e FatFormatter::writeMbr()
00033630 g     F .text.itcm	00000036 ILI9341_t3::setCursor(short, short)
00029e34 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
600367f4  w    O .text.progmem	00000018 usb_string_product_name
2000f024 g     O .bss	00000008 AudioOutputSPDIF::dma
0002c0e4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
20014b9c g     O .bss	00000020 pl6FX3
00023870 g     F .text.itcm	000000fa AudioFilterStateVariable::update()
000391f8  w    F .text.itcm	00000004 usb_serial_class::available()
000229c4 g     F .text.itcm	00000104 AudioEffectReverb::update()
00021d10 g     F .text.itcm	00000074 SmfWriter::write_buf_int(unsigned int)
2001141c g     O .bss	00000014 patchCord17
200114f8 g     O .bss	00000014 patchCord18
600367f0 g     O .text.progmem	00000001 _serialEvent1_default
0003de88 g     F .text.itcm	00000118 floor
000421dc g     F .text.itcm	000000ba __d2b
200115d4 g     O .bss	00000014 patchCord19
00010e80 g     F .text.itcm	000000dc FX2Bitcrush_static()
00002c60  w    F .text.itcm	00000088 Encoder::isr21()
00000894  w    F .text.itcm	0000001a SDFile::position()
0002dacc g     F .text.itcm	00000006 sdCsInit(unsigned char)
20014f64 g     O .bss	00000038 pl7envelope4
0002a858 g     F .text.itcm	000000b8 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00018068 g     F .text.itcm	000002d0 Plugin1_Page1_Dynamic()
20022ee0 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
20014f2c g     O .bss	00000038 pl7envelope3
00028c44 g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
0002cbec g     F .text.itcm	0000000c SdioCard::errorData() const
00000cf0  w    F .text.itcm	00000034 File::~File()
0003e20c g     F .text.itcm	0000000e fabsf
000092fc g     F .text.itcm	000009c2 savePlugin(char const*, unsigned char)
20022cbc g     O .bss	00000004 usb_midi_handleRealTimeSystem
00007fc8 g     F .text.itcm	00000058 selectSolo(int)
20022d42 g     O .bss	00000001 phraser
20005f88 g     O .data	00000004 F_CPU_ACTUAL
00035ed4 g     F .text.itcm	00000030 USBHost::contribute_Pipes(Pipe_struct*, unsigned long)
20014ef4 g     O .bss	00000038 pl7envelope2
00000a10  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
20014ebc g     O .bss	00000038 pl7envelope1
00037624 g     F .text.itcm	0000000c IRQHandler_Serial1
6003680c g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20005e40 g     O .data	00000000 .hidden __dso_handle
00041df0 g     F .text.itcm	00000012 __i2b
2001213c g     O .bss	00000014 patchCord50
000240f4 g     F .text.itcm	000000dc AudioOutputI2S::config_i2s(bool)
00017524 g     F .text.itcm	000001b4 Plugin5_Page1_Dynamic()
000350fc g     F .text.itcm	000002e4 USBHost::enumeration(Transfer_struct const*)
200124ac g     O .bss	00000014 patchCord90
00005dc8 g     F .text.itcm	00000038 clearStepsGrid()
20012150 g     O .bss	00000014 patchCord51
200124fc g     O .bss	00000014 patchCord94
20010f08 g     O .bss	00000014 patchCord110
20002880 g     O .data	00000100 AudioSynthNoisePink::pfirb
20011304 g     O .bss	00000014 patchCord157
0002b838 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
2001169c g     O .bss	00000014 patchCord199
20014bfc g     O .bss	00000028 pl6dc1
000304e8 g     F .text.itcm	000003f0 ILI9341_t3::writeRect(short, short, short, short, unsigned short const*)
20002ce8 g     O .data	0000000c vtable for AudioSynthNoisePink
00000168  w    F .text.itcm	0000000c File::flush()
00001a10  w    F .text.itcm	00000088 Encoder::isr3()
200112f0 g     O .bss	00000014 patchCord156
00038310 g     F .text.itcm	000002b8 pwm_init
200124c0 g     O .bss	00000014 patchCord91
200112dc g     O .bss	00000014 patchCord155
20012744 g     O .bss	0000003c pl10filter1
20010e00 g     O .bss	00000004 note_frequency
20010a44 g     O .bss	00000004 dsend_noteOff
20011688 g     O .bss	00000014 patchCord198
20002d40 g     O .data	0000000c vtable for AudioSynthWaveformPWM
00002010  w    F .text.itcm	0000008c Encoder::isr46()
200112c8 g     O .bss	00000014 patchCord154
20006cdc g     O .data	00000004 __malloc_sbrk_base
20011674 g     O .bss	00000014 patchCord197
2001128c g     O .bss	00000014 patchCord151
000119e0 g     F .text.itcm	0000058c MixerPage1_Dynamic()
200124e8 g     O .bss	00000014 patchCord93
20011638 g     O .bss	00000014 patchCord194
200124d4 g     O .bss	00000014 patchCord92
00008564 g     F .text.itcm	00000144 mixerPage3_Static()
2000629c g     O .data	00000060 Serial1
20011278 g     O .bss	00000014 patchCord150
20011624 g     O .bss	00000014 patchCord193
200072a3 g     O .data	00000001 end_of_loop_old
200112b4 g     O .bss	00000014 patchCord153
600020c4 g     F .text.code	00000054 _reboot_Teensyduino_
20006d88 g     O .data	00000004 fx3delayFilterFreq
00025d0c g     F .text.itcm	00000080 AudioSynthWaveformSine::update()
200112a0 g     O .bss	00000014 patchCord152
2001222c g     O .bss	00000014 patchCord61
20011660 g     O .bss	00000014 patchCord196
0000df48 g     F .text.itcm	00000230 saveFX1()
60001824 g     F .text.code	00000084 TwoWire::setSCL(unsigned char)
20014d28 g     O .bss	00000020 pl7FX1
2001164c g     O .bss	00000014 patchCord195
00037048 g     F .text.itcm	0000001a HardwareSerial::flush()
00042298 g     F .text.itcm	00000100 __ssprint_r
20014d48 g     O .bss	00000020 pl7FX2
2000efac g     O .bss	00000010 AudioOutputPWM::dma
60021628 g     O .text.progmem	00003684 AudioSampleTomtom
00006b6c g     F .text.itcm	00000090 drawNrInRect2(int, unsigned char, unsigned char, int)
000361f8 g     F .text.itcm	0000008a MIDIDeviceBase::init()
00025308 g     F .text.itcm	0000003a AudioRecordQueue::readBuffer()
200126b4 g     O .bss	00000020 pl10dry
20012290 g     O .bss	00000014 patchCord66
00026a24 g     F .text.itcm	0000008c BandLimitedWaveform::init_pulse(unsigned long, unsigned long)
20022cec g     O .bss	00000004 usb_timer1_callback
00023e88 g     F .text.itcm	0000007c AudioAmplifier::update()
20010fbc g     O .bss	00000014 patchCord119
00027820 g     F .text.itcm	0000003a ExFatFile::dirCache(unsigned char, unsigned char)
20014d68 g     O .bss	00000020 pl7FX3
2001083c g     O .bss	0000003c dlfilter1
2000efd4 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
2001132c g     O .bss	00000014 patchCord159
20022d41 g     O .bss	00000001 phrase
20016f80 g     O .bss	00000028 playMem8
20010f30 g     O .bss	00000014 patchCord112
0002bd9c g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00022ed8 g     F .text.itcm	00000054 AudioFilterLadder::octaveControl(float)
2000ef50 g     O .bss	00000004 ExFatVolume::m_cwv
20011318 g     O .bss	00000014 patchCord158
00005e00 g     F .text.itcm	000000e8 drawActivePolySteps()
20016fa8 g     O .bss	00000028 playMem9
20010f58 g     O .bss	00000014 patchCord114
20010f1c g     O .bss	00000014 patchCord111
20005f04 g     O .data	00000040 FX2Volume
20005fc4 g     O .data	00000018 OSC
00041c74 g     F .text.itcm	0000004c _Balloc
20022d23 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
20010f44 g     O .bss	00000014 patchCord113
00034c68 g     F .text.itcm	0000021c USBHost::delete_Pipe(Pipe_struct*)
200122a4 g     O .bss	00000014 patchCord67
0002d96c g     F .text.itcm	000000cc SdioCard::readSector(unsigned long, unsigned char*)
0002c100 g     F .text.itcm	00000066 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000078fc g     F .text.itcm	000001f4 startRecording()
2000f06c g     O .bss	00000008 AsyncAudioInputSPDIF3::dma
200122b8 g     O .bss	00000014 patchCord68
2000ef54 g     O .bss	00000004 AudioInputI2S::block_left
20022d21 g     O .bss	00000001 AudioOutputI2S::update_responsibility
60002168 g       .text.code	00000000 __preinit_array_start
2001227c g     O .bss	00000014 patchCord65
0000512c g     F .text.itcm	00000094 drawstepPosition(int)
0002cbf8 g     F .text.itcm	0000001c SdioCard::readCID(CID*)
2000f1dc g     O .bss	00000004 __malloc_max_sbrked_mem
00006440 g     F .text.itcm	00000074 drawOctaveNumber()
0002cc14 g     F .text.itcm	0000001c SdioCard::readCSD(csd_t*)
00035fdc g     F .text.itcm	0000021c MIDIDeviceBase::claim(Device_struct*, int, unsigned char const*, unsigned long)
0002b3b8 g     F .text.itcm	000001d0 FatFormatter::makeFat32()
2000f150 g     O .bss	00000004 FsVolume::m_cwv
00006c64 g     F .text.itcm	00000040 draw_SeqMode()
000387bc  w    F .text.itcm	00000004 __cxa_pure_virtual
0001489c g     F .text.itcm	00000080 Plugin_3_Settings()
0002e57c g     F .text.itcm	0000000c lpi2c1_isr()
0002ddf0 g     F .text.itcm	00000054 FsName::get16()
20002b08  w    O .data	0000001c vtable for MIDIDevice
20002c08 g     O .data	0000000c vtable for AudioRecordQueue
00012830 g     F .text.itcm	000000d8 change_OSC_DRUM_frequency(int, int, int, int, int, int, char const*)
0000f8d0 g     F .text.itcm	000000c0 draw_Ratchrate()
20016548 g     O .bss	00000190 pl8waveform1
00029338 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
00003018  w    F .text.itcm	00000088 Encoder::isr28()
60080800 g     O .text.csf	00000c00 hab_csf
0002e3a8 g     F .text.itcm	00000120 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000e5f0 g     F .text.itcm	000001b4 FX3Delay_static()
60001654 g     F .text.code	0000005c set_audioClock(int, long, unsigned long, bool)
20002d1c g     O .data	0000000c vtable for AudioSynthSimpleDrum
20002d70 g     O .data	0000000c vtable for AudioSynthWaveformModulated
200119e4 g     O .bss	00000014 patchCord236
200119f8 g     O .bss	00000014 patchCord237
00035650 g     F .text.itcm	00000034 USBHub::init()
00022014  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20011a0c g     O .bss	00000014 patchCord238
0003e2c0 g     F .text.itcm	0000000c nanf
2000628c g     O .data	00000010 Serial
2000ef90 g     O .bss	00000004 AudioOutputI2S::block_left_2nd
20011a20 g     O .bss	00000014 patchCord239
0002e0ec  w    F .text.itcm	00000018 TwoWire::peek()
0003b0e8 g     F .text.itcm	000000a0 sin
20015134 g     O .bss	00000030 pl7pink1
20011610 g     O .bss	00000014 patchCord192
0003e678 g     F .text.itcm	00000010 calloc
00000390  w    F .text.itcm	0000000e newdigate::ResamplingSdReader::~ResamplingSdReader()
000129a4 g     F .text.itcm	000000ac change_OSC_DRUM_length(int, int, int, int, int, int, char const*)
200115fc g     O .bss	00000014 patchCord191
60036750 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00030e60 g     F .text.itcm	00000168 ILI9341_t3::fillCircleHelper(short, short, short, unsigned char, short, unsigned short)
20014264 g     O .bss	00000038 pl3mixer1
20010dbc g     O .bss	00000038 mixer9
200076c0 g       .bss	00000000 _sbss
20006004 g     O .data	0000000c PL4MIX
20022d00 g     O .bss	00000002 AudioOutputI2S::block_right_offset
0003767c  w    F .text.itcm	0000000e _write
200115e8 g     O .bss	00000014 patchCord190
0002bc6c g     F .text.itcm	00000130 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
200081e0 g     O .bss	000003c0 hub1
0003e348 g     F .text.itcm	00000048 .hidden __aeabi_f2ulz
00036f4c g     F .text.itcm	00000004 pendablesrvreq_isr
0002b124 g     F .text.itcm	000000b4 FatFormatter::initFatDir(unsigned char, unsigned long)
20002cb8 g     O .data	0000000c vtable for AudioFilterBiquad
0003dfb8 g     F .text.itcm	0000011c rint
200122cc g     O .bss	00000014 patchCord69
20008960 g     O .bss	000003c0 hub3
00022ac8 g     F .text.itcm	00000134 AudioEffectReverb::init_comb_filters()
0003ae18 g     F .text.itcm	00000186 arm_shift_q31
200085a0 g     O .bss	000003c0 hub2
0001b674 g     F .text.itcm	00000744 PluginNoteOn()
00035f88 g     F .text.itcm	00000008 MIDIDeviceBase::disconnect()
0002b86c g     F .text.itcm	0000002c FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
20012860 g     O .bss	00000020 pl10noise1
000270c4 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00027148  w    F .text.itcm	00000074 SDClass::rename(char const*, char const*)
20012240 g     O .bss	00000014 patchCord62
0002dd54 g     F .text.itcm	00000060 FsCache::prepare(unsigned long, unsigned char)
000130a0 g     F .text.itcm	000000b4 ENV_ADSR(int, int, int, int, int, int, char const*)
20012254 g     O .bss	00000014 patchCord63
200125fc g     O .bss	00000020 pl10amp
600018e4 g     F .text.code	00000070 AudioStream::initialize_memory(audio_block_struct*, unsigned int)
0002dc10 g     F .text.itcm	00000058 SdSpiArduinoDriver::deactivate()
20012268 g     O .bss	00000014 patchCord64
2000626c g     O .data	00000020 STATEFILTER
00035b94 g     F .text.itcm	000001dc USBHub::control(Transfer_struct const*)
20007160 g     O .data	00000030 showVOL
000382b8 g     F .text.itcm	00000004 operator delete[](void*)
6003680c  w    O .text.progmem	00000018 usb_string_manufacturer_name
20016df0 g     O .bss	00000028 playMem1
0002a274 g     F .text.itcm	0000005c FatFile::rmdir()
0003d7a4 g     F .text.itcm	00000630 __kernel_rem_pio2f
0000130c  w    F .text.itcm	000000a8 newdigate::ResamplingSdReader::open(char*)
2000e69c g     O .bss	00000010 LP_step_bool
20016e90 g     O .bss	00000028 playMem2
20012128 g     O .bss	00000014 patchCord5
0000ded8 g     F .text.itcm	00000070 FX1reverb_settings()
0001705c g     F .text.itcm	000000fc Plugin_View_Static()
20016eb8 g     O .bss	00000028 playMem3
20012204 g     O .bss	00000014 patchCord6
20005798 g     O .data	00000200 ulaw_decode_table
00017ddc g     F .text.itcm	0000028c Plugin7_Page1_Dynamic()
20016ee0 g     O .bss	00000028 playMem4
00034498 g     F .text.itcm	00000170 USBHost::followup_Error()
000387c0 g     F .text.itcm	00000004 Panic_Temp_isr
2000ef5c g     O .bss	00000008 AudioInputI2S::dma
20012ec0 g     O .bss	00000020 pl16dry
20016f08 g     O .bss	00000028 playMem5
20012b00 g     O .bss	00000020 pl11dry
600016b0 g     F .text.code	000000c0 TwoWire::begin()
2001268c g     O .bss	00000028 pl10dc3
000147d0 g     F .text.itcm	000000cc Plugin2_Page_Static()
20016f30 g     O .bss	00000028 playMem6
20008d20 g     O .bss	000003c0 hub4
00010408 g     F .text.itcm	00000160 draw_A(int, int, int, int, float, char const*)
000278e0 g     F .text.itcm	00000090 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
20010ca4 g     O .bss	00000038 mixer1
20016f58 g     O .bss	00000028 playMem7
200123bc g     O .bss	00000014 patchCord8
2001263c g     O .bss	00000028 pl10dc1
200122e0 g     O .bss	00000014 patchCord7
0003765c g     F .text.itcm	00000020 Print::println()
20010b74 g     O .bss	00000004 incomingCC
00036f70 g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
0000038c  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::~MidiInterface()
0002cf14 g     F .text.itcm	0000006c SdioCard::sectorCount()
200149f0 g     O .bss	00000020 pl5amp
20012664 g     O .bss	00000028 pl10dc2
0002bec8 g     F .text.itcm	0000005e FsBaseFile::openNext(FsBaseFile*, int)
20012498 g     O .bss	00000014 patchCord9
20022d18 g     O .bss	00000001 NFX5presetNr
20010d4c g     O .bss	00000038 mixer5
0002b658 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
000281e0 g     F .text.itcm	000000be ExFatFile::remove()
20010d84 g     O .bss	00000038 mixer6
00033c10 g     F .text.itcm	00000188 Adafruit_Keypad::tick()
00029928 g     F .text.itcm	00000034 FatFile::addCluster()
0002ddd8 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
000270c0  w    F .text.itcm	00000002 SDClass::~SDClass()
0003a288 g     F .text.itcm	00000050 sm_align_pool
20014870 g     O .bss	00000020 pl4amp2
2000e630 g     O .bss	00000010 LP_drawOnce
2001204c g     O .bss	00000014 patchCord4
20010f6c g     O .bss	00000014 patchCord115
0002c048  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
20010f80 g     O .bss	00000014 patchCord116
20011f5c g     O .bss	00000014 patchCord3
0003a0f0 g     F .text.itcm	000000a4 usb_serial_flush_output
2000f250 g     O .bss	00000010 button
20022c98 g     O .bss	00000004 usb_midi_handleActiveSensing
0002c608  w    F .text.itcm	00000008 SharedSpiCard::readCID(CID*)
20010f94 g     O .bss	00000014 patchCord117
00040b3c g     F .text.itcm	00000018 vdprintf
00028734 g     F .text.itcm	0000019a ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00025264 g     F .text.itcm	0000003e AudioRecordQueue::update()
20014bdc g     O .bss	00000020 pl6amp2
000023e0  w    F .text.itcm	00000088 Encoder::isr5()
20010fa8 g     O .bss	00000014 patchCord118
00021ebc g     F .text.itcm	000000cc SmfWriter::setFilename(char const*)
00012718 g     F .text.itcm	00000084 change_OSC_MOD_frequency(int, int, int, int, float, float, char const*)
0002995c g     F .text.itcm	0000007c FatFile::addDirCluster()
20022d15 g     O .bss	00000001 NFX2presetNr
000140e8 g     F .text.itcm	00000120 FX2Bitcrush_dynamic()
00039144 g     F .text.itcm	00000028 usb_transmit
60006664 g     O .text.progmem	0001afc4 AudioSampleGong
2000f230 g     O .bss	00000020 bitcrusher2
20007140 g     O .data	0000001c seqModes
600019b4  w    F .text.code	00000002 startup_late_hook
2000e7cc g     O .bss	00000004 NFX4
0002bf28 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
0002e4c8 g     F .text.itcm	000000b4 TwoWire::isr()
20002c14 g     O .data	00000070 vtable for DedicatedSpiCard
00022040 g     F .text.itcm	00000084 AudioControlSGTL5000::read(unsigned int)
2000e7c8 g     O .bss	00000004 NFX3
000222f4 g     F .text.itcm	0000000c AudioControlSGTL5000::enable()
2001699c g     O .bss	00000454 pl9string1
0002d178 g     F .text.itcm	00000090 SdioCard::writeData(unsigned char const*)
0002b83c g     F .text.itcm	00000030 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
0002c54c g     F .text.itcm	00000074 SharedSpiCard::readData(unsigned char*, unsigned int)
2000e7c4 g     O .bss	00000004 NFX2
00040b54 g     F .text.itcm	0000001a __ascii_wctomb
2000e7c0 g     O .bss	00000004 NFX1
000003a0  w    F .text.itcm	00000028 SDFile::close()
20010b24 g     O .bss	00000004 fx3delayAmount_graph
200158b0 g     O .bss	00000020 pl8FX1
2000726c g     O .data	00000030 wavKit
200158f0 g     O .bss	00000020 pl8FX3
00015630 g     F .text.itcm	00000180 Plugin8_Change()
000071e8 g     F .text.itcm	0000023c LP_melodicstep()
00027c58 g     F .text.itcm	000003b8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
2000722c g     O .data	00000028 usb_midi_devices
20022d56 g     O .bss	00000001 usb_configuration
000061dc g     F .text.itcm	00000058 clearPixelGridY(int)
2000621c g     O .data	00000050 SPI
200158d0 g     O .bss	00000020 pl8FX2
20010b20 g     O .bss	00000004 fx3delayAmount
00039048 g     F .text.itcm	00000064 usb_config_rx
000145a0 g     F .text.itcm	000000fc pl4MIX(int, int, int, int)
200072a5 g     O .data	00000001 songpageNumber
00001ef8  w    F .text.itcm	0000008c Encoder::isr44()
20010b30 g     O .bss	00000004 fx3delayFilterReso
00024784 g     F .text.itcm	0000013c AudioPlaySdWav::stop()
000278b8 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
000031b0  w    F .text.itcm	00000088 Encoder::isr31()
20022ee4 g     O .bss	00000008 usb_cdc_line_coding
00022300  w    F .text.itcm	0000005c AudioControlSGTL5000::inputSelect(int)
00025c48 g     F .text.itcm	00000060 AudioSynthSimpleDrum::secondMix(float)
2000e7d0 g     O .bss	00000004 NFX5
000382b4 g     F .text.itcm	00000004 operator delete(void*)
000021b4  w    F .text.itcm	0000008c Encoder::isr49()
20002bf4  w    O .data	00000014 vtable for AudioPlaySdResmp
000007a0  w    F .text.itcm	00000052 SDFile::setModifyTime(DateTimeFields const&)
00036d74 g     F .text.itcm	00000040 AudioStream::update_setup()
00000474  w    F .text.itcm	0000005a SDFile::available()
0002c044  w    F .text.itcm	00000004 SharedSpiCard::type() const
20007038 g     O .data	00000014 myFile
00025ca8 g     F .text.itcm	00000064 AudioSynthSimpleDrum::pitchMod(float)
20002e28  w    O .data	00000024 vtable for Stream
0002dcbc g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000382b0 g     F .text.itcm	00000004 operator new[](unsigned int)
2000eff4 g     O .bss	00000008 AudioOutputI2S2::dma
0002bbb0 g     F .text.itcm	000000bc FatPartition::freeClusterCount()
20015950 g     O .bss	00000028 pl8dc1
00024734 g     F .text.itcm	00000024 AudioPlayMemory::play(unsigned int const*)
00037630 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
20012598 g     O .bss	00000004 pixelTouchX
00036284 g     F .text.itcm	0000007a MIDIDeviceBase::rx_data(Transfer_struct const*)
20012e00 g     O .bss	00000020 pl15dry
00033ab8 g     F .text.itcm	00000110 fastinterpolate(short, short, short, short, float)
000373e4 g     F .text.itcm	000000d2 HardwareSerial::write9bit(unsigned long)
00025ed0 g     F .text.itcm	00000064 BandLimitedWaveform::process_active_steps(unsigned long)
20012d20 g     O .bss	00000020 pl14amp2
20012ae0 g     O .bss	00000020 pl11amp2
0002203c  w    F .text.itcm	00000004 AudioControlSGTL5000::inputLevel(float)
20010b78 g     O .bss	00000004 incomingCC_changed
2000340c g     O .data	000004fb glcdfont
20016718 g     O .bss	00000020 pl9FX3
2000f21c g     O .bss	00000010 analogReadArray
0002ee50  w    F .text.itcm	00000088 ILI9341_t3::maybeUpdateTCR(unsigned long)
00003484  w    F .text.itcm	00000024 Print::println(__FlashStringHelper const*)
000296b8 g     F .text.itcm	00000024 ExFatPartition::fatPut(unsigned long, unsigned long)
00000640  w    F .text.itcm	00000068 SDFile::getModifyTime(DateTimeFields&)
0002e0cc  w    F .text.itcm	0000001e TwoWire::read()
20010e04 g     O .bss	00000014 patchCord1
00033674 g     F .text.itcm	00000006 ILI9341_t3::setTextColor(unsigned short)
0002a5e8 g     F .text.itcm	00000076 FatFile::truncate()
20016778 g     O .bss	0000003c pl9bpfilter
20006d94 g     O .data	00000004 fx3delayTime_graph
00022964 g     F .text.itcm	00000060 AudioEffectReverb::_do_comb_lpf(AudioEffectReverb::comb_lpf*, long*, long*)
200116b0 g     O .bss	00000014 patchCord2
20016758 g     O .bss	00000020 pl9amp2
0001a7a8 g     F .text.itcm	00000330 PluginNoteOff()
2000f264 g     O .bss	00000004 ctrack
00000534  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
20006758 g     O .data	00000004 AudioSynthKarplusStrong::seed
000335a0 g     F .text.itcm	0000008e ILI9341_t3::write(unsigned char)
00039f70 g     F .text.itcm	00000044 usb_serial_peekchar
000017ec  w    F .text.itcm	0000008c Encoder::isr54()
00006518 g     F .text.itcm	000001e0 drawMIDIchannel()
20016fec g     O .bss	0000001c playSdPitch2
00036c50 g     F .text.itcm	0000002c AudioConnection::AudioConnection(AudioStream&, unsigned char, AudioStream&, unsigned char)
000066f8 g     F .text.itcm	00000074 draw_sub_page_buttons(int)
20016fd0 g     O .bss	0000001c playSdPitch1
0003ce50 g     F .text.itcm	00000120 __kernel_cos
200166f8 g     O .bss	00000020 pl9FX2
20011a34 g     O .bss	00000014 patchCord24
200166d8 g     O .bss	00000020 pl9FX1
00006938 g     F .text.itcm	000001a4 drawPotCC(int, unsigned char, unsigned char, unsigned char, int)
00004f38 g     F .text.itcm	0000008c showCoordinates()
00028d48 g     F .text.itcm	000005a4 ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00002e80  w    F .text.itcm	00000088 Encoder::isr25()
00036f90 g     F .text.itcm	00000026 HardwareSerial::available()
20022d40 g     O .bss	00000001 page_phrase_start
0002300c g     F .text.itcm	000006d8 AudioFilterLadder::update()
20015a08 g     O .bss	00000b40 pl8filter1
200117a0 g     O .bss	00000014 patchCord21
00025c34 g     F .text.itcm	00000014 AudioSynthSimpleDrum::noteOn()
20014ae8 g     O .bss	0000003c pl5filter1
200116c4 g     O .bss	00000014 patchCord20
20011700 g     O .bss	00000014 patchCord202
00029758 g     F .text.itcm	00000070 ExFatPartition::freeClusterCount()
20006768 g     O .data	0000016c __global_locale
200154f8 g     O .bss	00000394 pl7waveformMod2
0003774c g     F .text.itcm	00000016 Print::print(long)
20011aac g     O .bss	00000014 patchCord245
20013190 g     O .bss	00000394 pl1waveformMod1
20011e58 g     O .bss	00000014 patchCord288
200116ec g     O .bss	00000014 patchCord201
20011cc8 g     O .bss	00000014 patchCord27
20011a84 g     O .bss	00000014 patchCord243
20011a98 g     O .bss	00000014 patchCord244
2001187c g     O .bss	00000014 patchCord22
20011e44 g     O .bss	00000014 patchCord287
200116d8 g     O .bss	00000014 patchCord200
20013524 g     O .bss	00000394 pl1waveformMod2
0003a5e8 g     F .text.itcm	00000036 arm_fir_interpolate_init_f32
20011a70 g     O .bss	00000014 patchCord242
20015164 g     O .bss	00000394 pl7waveformMod1
00033a80 g     F .text.itcm	00000020 XPT2046_Touchscreen::getPoint()
20011de0 g     O .bss	00000014 patchCord282
20011b10 g     O .bss	00000014 patchCord25
20011e30 g     O .bss	00000014 patchCord286
20002cd0 g     O .data	0000000c vtable for AudioSynthWaveform
20011e1c g     O .bss	00000014 patchCord285
20011dcc g     O .bss	00000014 patchCord281
20013c4c g     O .bss	00000394 pl1waveformMod4
20011a5c g     O .bss	00000014 patchCord241
20011e08 g     O .bss	00000014 patchCord284
00026ab8 g     F .text.itcm	00000014 BandLimitedWaveform::BandLimitedWaveform()
20011958 g     O .bss	00000014 patchCord23
2001588c g     O .bss	00000024 pl7waveformMod3
00005a30 g     F .text.itcm	000000a0 draw_end_of_loop()
00039200  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
20022d48 g     O .bss	00000001 selectPage
0002d844 g     F .text.itcm	000000bc SdioCard::readData(unsigned char*)
20011a48 g     O .bss	00000014 patchCord240
00000b38  w    F .text.itcm	00000048 SDFile::~SDFile()
2000707c g     O .data	00000010 oldEnc
20002f40  w    O .data	00000014 vtable for newdigate::IndexableSDFile<128u, 2u>
20011df4 g     O .bss	00000014 patchCord283
0000f094 g     F .text.itcm	000001b4 NoteFX3_Control()
20006308 g     O .data	00000140 Wire
60002168 g       .text.code	00000000 __init_array_start
20022cb4 g     O .bss	00000004 usb_midi_handlePitchChange
00000b80  w    F .text.itcm	00000088 SDFile::seek(unsigned long long, int)
0003b318 g     F .text.itcm	00000094 sinf
0003e688 g     F .text.itcm	0000005e _calloc_r
0002c4f8 g     F .text.itcm	00000054 SharedSpiCard::writeStart(unsigned long)
00025360 g     F .text.itcm	00000142 AudioSynthWaveformDc::update()
00001878  w    F .text.itcm	00000088 Encoder::isr0()
0003e2cc g     F .text.itcm	0000001a copysign
0002bb5c g     F .text.itcm	00000052 FatPartition::freeChain(unsigned long)
000176d8 g     F .text.itcm	000001b4 Plugin6_Page1_Dynamic()
0000e7a4 g     F .text.itcm	00000158 NoteFX1_Control()
0000b3ec g     F .text.itcm	00000730 saveNoteFX(char const*, unsigned char)
00013d38 g     F .text.itcm	00000098 change_LDF_octaveControl(int, int, int, int, int, int, char const*)
20011728 g     O .bss	00000014 patchCord204
0000098c  w    F .text.itcm	00000030 AudioPlaySdResmp::~AudioPlaySdResmp()
00035f38 g     F .text.itcm	0000002c USBHost::contribute_String_Buffers(strbuf_t*, unsigned long)
20011714 g     O .bss	00000014 patchCord203
20011ad4 g     O .bss	00000014 patchCord247
20011750 g     O .bss	00000014 patchCord206
20011e6c g     O .bss	00000014 patchCord289
20006018 g     O .data	00000200 RAW_files
2000cfe0 g     O .bss	00000700 midi10
20011afc g     O .bss	00000014 patchCord249
20011ac0 g     O .bss	00000014 patchCord246
000049cc g     F .text.itcm	000000b4 read32(File&)
0000c02c g     F .text.itcm	00000748 loadNoteFX(char const*, int)
2001173c g     O .bss	00000014 patchCord205
00021768 g     F .text.itcm	0000000a SmfWriter::SmfWriter()
20002f2c  w    O .data	00000014 vtable for newdigate::IndexableFile<128u, 2u, File>
20011ae8 g     O .bss	00000014 patchCord248
0003cb14 g     F .text.itcm	00000298 __ieee754_rem_pio2f
20002f54  w    O .data	00000020 vtable for newdigate::ResamplingSdReader
20018d8c g     O .bss	00000368 queue1
20022d25 g     O .bss	00000001 USBHost::enumeration_busy
20011bec g     O .bss	00000014 patchCord26
00029e88 g     F .text.itcm	0000019a FatFile::read(void*, unsigned int)
000395cc g     F .text.itcm	00000090 usb_midi_read_message
2000efbc g     O .bss	00000008 AudioOutputTDM::dma
0002bb3c g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
20007190 g     O .data	00000020 sideTabDigit
0000586c g     F .text.itcm	0000004c drawarrengmentLines(int)
2000e684 g     O .bss	0000000c LP_octave_bool
60005ae0 g     O .text.progmem	00000b84 AudioSamplePongblip
20011da4 g     O .bss	00000014 patchCord28
20011e80 g     O .bss	00000014 patchCord29
20014198 g     O .bss	00000020 pl3dry
000139d0 g     F .text.itcm	000001cc Plugin1_Page_Static(int)
00013fc0 g     F .text.itcm	0000008c change_bitCrush_bits(int, int, int, int, int, int, char const*)
2001429c g     O .bss	00000190 pl3waveform1
2000eed4 g     O .bss	00000004 AudioStream::memory_pool
00005b80 g     F .text.itcm	00000080 drawStepSequencerStatic(int)
200126d4 g     O .bss	00000038 pl10envelope1
20002dcc  w    O .data	0000005c vtable for SDFile
00041e04 g     F .text.itcm	00000130 __multiply
00041f34 g     F .text.itcm	000000a0 __pow5mult
000272d4  w    F .text.itcm	0000004c SDClass::exists(char const*)
00039d7c g     F .text.itcm	00000108 usb_serial_configure
0002dc88 g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
2000efcc g     O .bss	00000004 EventResponder::firstInterrupt
00033c00 g     F .text.itcm	00000010 Adafruit_Keypad::~Adafruit_Keypad()
0003a088 g     F .text.itcm	00000018 usb_serial_write
0002c218 g     F .text.itcm	00000044 SharedSpiCard::isBusy()
20002b84 g     O .data	0000000c vtable for AudioPlaySdWav
20022d36 g     O .bss	00000001 debugTime
0003dfa8 g     F .text.itcm	00000010 nan
00000009 g       *ABS*	00000000 _itcm_block_count
00002930  w    F .text.itcm	00000088 Encoder::isr15()
20014bbc g     O .bss	00000020 pl6amp
20022ca0 g     O .bss	00000004 usb_midi_handleClock
00023cde g     F .text.itcm	00000000 memcpy_tointerleaveL
0003372c g     F .text.itcm	00000354 XPT2046_Touchscreen::update()
0003ef78 g     F .text.itcm	00000002 __malloc_lock
20022d30 g     O .bss	00000001 arrangmentSelect
2000e588 g     O .bss	00000038 FX3mixer4
00028c84 g     F .text.itcm	0000001c ExFatFormatter::writeUpcaseUnicode(unsigned short)
000285ac g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
2000309c g     O .data	00000370 digital_pin_to_info_PGM
0002c03c  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00033ee8 g     F .text.itcm	00000184 USBHost::begin()
000146a0 g     F .text.itcm	00000130 Plugin2_Change()
00037f74 g     F .text.itcm	0000000c digitalRead
2000f034 g     O .bss	00000008 AudioOutputI2SHex::dma
2000e5f8 g     O .bss	00000038 FX3mixer6
00000754  w    F .text.itcm	0000004c SDFile::name()
20006760  w    O .data	00000004 AudioRecorders::drawOscilloscope(float)::posY_old
200138b8 g     O .bss	00000394 pl1waveformMod3
20014090 g     O .bss	00000020 pl2amp2
20011db8 g     O .bss	00000014 patchCord280
20005fdc g     O .data	0000001c OSC_MOD
00017b88 g     F .text.itcm	00000254 Plugin10_Page1_Dynamic()
00021f88 g     F .text.itcm	0000004c SmfWriter::writeHeader()
0003e390 g     F .text.itcm	000002e2 .hidden __udivmoddi4
20010b28 g     O .bss	00000004 fx3delayFeedback
00014208 g     F .text.itcm	00000098 change_reverb_reverbTime(int, int, int, int, int, int, char const*)
20022edb g     O .bss	00000001 usb_midi_msg_type
2000729e  w    O .data	00000001 AudioRecorders::drawOscilloscope(float)::AudioYdot
00012f44 g     F .text.itcm	000000c0 change_ENV_R(int, int, int, int, int, int, char const*)
20012218 g     O .bss	00000014 patchCord60
60036964 g       *ABS*	00000000 _stextload
0002ca14 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0002b1d8 g     F .text.itcm	0000005c FatFormatter::initPbs()
20002cc4 g     O .data	0000000c vtable for AudioFilterLadder
000024f0  w    F .text.itcm	00000088 Encoder::isr7()
20010a74 g     O .bss	00000038 envelope1
20010e68 g     O .bss	00000014 patchCord103
0000e300 g     F .text.itcm	00000070 FX2Bitcrush_settings()
200111ec g     O .bss	00000014 patchCord144
2000f02c g     O .bss	00000008 AudioInputI2SQuad::dma
0000766c g     F .text.itcm	00000290 myNoteOn(int, unsigned char, unsigned char)
200115c0 g     O .bss	00000014 patchCord189
20010e54 g     O .bss	00000014 patchCord102
0003e760 g     F .text.itcm	00000010 free
200111c4 g     O .bss	00000014 patchCord142
20010b38 g     O .bss	00000003 fxpreset
00014d00 g     F .text.itcm	00000154 Plugin4_Change()
0002dc68 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
200111d8 g     O .bss	00000014 patchCord143
2000efa4 g     O .bss	00000008 AudioOutputMQS::dma
20012d40 g     O .bss	00000020 pl14dry
200115ac g     O .bss	00000014 patchCord188
20010e40 g     O .bss	00000014 patchCord101
200111b0 g     O .bss	00000014 patchCord141
0000013c  w    F .text.itcm	00000002 Print::flush()
20011548 g     O .bss	00000014 patchCord183
20010e2c g     O .bss	00000014 patchCord100
20011598 g     O .bss	00000014 patchCord187
20006d74 g     O .data	00000014 frec
000022cc  w    F .text.itcm	0000008c Encoder::isr51()
0001745c g     F .text.itcm	000000c8 Plugin4_Page1_Dynamic()
20010d14 g     O .bss	00000038 mixer11
20011584 g     O .bss	00000014 patchCord186
20011534 g     O .bss	00000014 patchCord182
2001119c g     O .bss	00000014 patchCord140
20010cdc g     O .bss	00000038 mixer10
20022d31 g     O .bss	00000001 audio_rec_listen
0002785c g     F .text.itcm	00000014 ExFatFile::close()
20011570 g     O .bss	00000014 patchCord185
00007af0 g     F .text.itcm	0000001c continueRecording()
2001155c g     O .bss	00000014 patchCord184
000004d0  w    F .text.itcm	00000018 SDFile::peek()
00041d94 g     F .text.itcm	0000005a __lo0bits
2000e320 g     O .bss	00000038 FX1mixer5
00003668  w    F .text.itcm	00000064 AudioSynthWaveform::AudioSynthWaveform()
000008fc  w    F .text.itcm	00000026 SDFile::isDirectory()
00023d1e g     F .text.itcm	00000000 memcpy_tointerleaveR
0002c014 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
20010aac g     O .bss	00000038 envelope2
0002ca30 g     F .text.itcm	00000024 DedicatedSpiCard::begin(SdSpiConfig)
600368c0 g     O .text.progmem	00000095 usb_config_descriptor_480
00001b24  w    F .text.itcm	0000008c Encoder::isr37()
000131e4 g     F .text.itcm	000000e0 change_ENV_ADSR(int, int, int, int, int, int, char const*)
2000f044 g     O .bss	00000008 AudioOutputPT8211::dma
0002810c g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
20012038 g     O .bss	00000014 patchCord39
000011b4  w    F .text.itcm	00000158 newdigate::ResamplingSdReader::createSourceBuffer()
20014da8 g     O .bss	00000020 pl7amp2
2000e278 g     O .bss	00000038 FX1mixer2
20006448 g     O .data	00000140 Wire1
20010e90 g     O .bss	00000014 patchCord105
2000e358 g     O .bss	00000038 FX1mixer6
0002c0e4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0003a194  w    F .text.itcm	000000f0 yield
20010e7c g     O .bss	00000014 patchCord104
00033aa0 g     F .text.itcm	00000018 XPT2046_Touchscreen::touched()
20011214 g     O .bss	00000014 patchCord146
20022d38 g     O .bss	00000001 desired_track
20005e68 g     O .data	00000004 DRUM
20010eb8 g     O .bss	00000014 patchCord107
20011fd4 g     O .bss	00000014 patchCord34
2000e2e8 g     O .bss	00000038 FX1mixer4
20012380 g     O .bss	00000014 patchCord77
2001123c g     O .bss	00000014 patchCord148
20011200 g     O .bss	00000014 patchCord145
20010ea4 g     O .bss	00000014 patchCord106
20006588 g     O .data	00000140 Wire2
2000e518 g     O .bss	00000038 FX3mixer2
00037af0 g     F .text.itcm	00000008 random(unsigned long)
0003ed10 g     F .text.itcm	00000000 memchr
20011228 g     O .bss	00000014 patchCord147
00006770 g     F .text.itcm	000001c4 drawPotDrum(int, unsigned char, unsigned char, int, unsigned char, int)
00021768 g     F .text.itcm	0000000a SmfWriter::SmfWriter()
20005f84 g     O .data	00000004 F_BUS_ACTUAL
600367f4 g     O .text.progmem	00000018 usb_string_product_name_default
20012024 g     O .bss	00000014 patchCord38
0002c900 g     F .text.itcm	00000052 SharedSpiCard::writeData(unsigned char, unsigned char const*)
20014dc8 g     O .bss	0000009c pl7biquad1
2000e1d0 g     O .bss	0000001c Enc1
000382bc g     F .text.itcm	00000004 operator delete(void*, unsigned int)
600019b0 g     F .text.code	00000002 startup_default_middle_hook
00001e6c  w    F .text.itcm	0000008c Encoder::isr43()
0003b630 g     F .text.itcm	0000033c powf
2000e2b0 g     O .bss	00000038 FX1mixer3
2000e1ec g     O .bss	0000001c Enc2
2000e5c0 g     O .bss	00000038 FX3mixer5
200076c0 g       .data	00000000 _edata
2000e208 g     O .bss	0000001c Enc3
2000e4e0 g     O .bss	00000038 FX3mixer1
00038004 g     F .text.itcm	00000164 attachInterrupt
00033344 g     F .text.itcm	0000025c ILI9341_t3::drawFontChar(unsigned int)
00005574 g     F .text.itcm	00000094 drawsongmodepageselector()
0001a08c g     F .text.itcm	0000071c myControlChange(int, unsigned char, unsigned char)
000385f8  w    F .text.itcm	00000002 serialEvent1()
2000e550 g     O .bss	00000038 FX3mixer3
00021d84 g     F .text.itcm	000000a8 SmfWriter::write_buf_var_int(unsigned int)
0000ee7c g     F .text.itcm	00000218 NoteFX2_Page1_Dynamic()
20022d43 g     O .bss	00000001 pixelphrase
200229e0 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20014070 g     O .bss	00000020 pl2amp
20014cf0 g     O .bss	00000038 pl6mixer1
20011764 g     O .bss	00000014 patchCord207
20005fa4 g     O .data	00000010 NFX3_ROW1
20022cf8 g     O .bss	00000002 AudioStream::cpu_cycles_total_max
0003e700 g     F .text.itcm	00000050 __libc_init_array
000363b4 g     F .text.itcm	000005d4 MIDIDeviceBase::read(unsigned char)
20011778 g     O .bss	00000014 patchCord208
0003878c g     F .text.itcm	00000030 _sbrk
2000ef94 g     O .bss	00000004 AudioOutputI2S::block_right_1st
2000715c g     O .data	00000004 seq_tempo
00002b50  w    F .text.itcm	00000088 Encoder::isr19()
2001178c g     O .bss	00000014 patchCord209
00000924  w    F .text.itcm	00000052 SDFile::setCreateTime(DateTimeFields const&)
20011520 g     O .bss	00000014 patchCord181
000288d0 g     F .text.itcm	000000e2 ExFatFile::truncate()
00034288 g     F .text.itcm	00000140 USBHost::queue_Control_Transfer(Device_struct*, setup_t*, void*, USBDriver*)
000038c4  w    F .text.itcm	00000570 Encoder::attach_interrupt(unsigned char, Encoder_internal_state_t*)
0002dad4 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
2001150c g     O .bss	00000014 patchCord180
000260dc g     F .text.itcm	0000002a BandLimitedWaveform::generate_square(unsigned long, int)
0000d094 g     F .text.itcm	00000368 DrumPluginPlay()
00023d5e g     F .text.itcm	00000000 memcpy_tointerleaveQuad
000036cc  w    F .text.itcm	00000088 AudioSynthWaveformModulated::AudioSynthWaveformModulated()
00029d68 g     F .text.itcm	000000cc FatFile::open(FatFile*, char const*, int)
200123a8 g     O .bss	00000014 patchCord79
2000f014 g     O .bss	00000008 AudioInputI2SOct::dma
000271bc  w    F .text.itcm	00000062 SDClass::remove(char const*)
60024cac g     O .text.progmem	00002c04 AudioSampleSnare
0002c4ac g     F .text.itcm	0000004c SharedSpiCard::readOCR(unsigned long*)
00002d70  w    F .text.itcm	00000088 Encoder::isr23()
0003965c g     F .text.itcm	000003d0 usb_midi_read
00023ae0 g     F .text.itcm	000000d0 AudioInputI2S::begin()
00009cc0 g     F .text.itcm	0000172a loadPlugin(char const*, int)
2000708c g     O .data	00000040 pluginName
0001491c g     F .text.itcm	000002b4 Plugin3_Change()
000241d0 g     F .text.itcm	000000e0 AudioOutputI2S::begin()
0003898c g     F .text.itcm	0000065c usb_isr
20022ccc g     O .bss	00000004 usb_midi_handleStop
0002c0f0  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
2001270c g     O .bss	00000038 pl10envelope2
0002e104  w    F .text.itcm	00000002 TwoWire::flush()
2000e6ac g     O .bss	00000004 LP_step_notes
000135ac g     F .text.itcm	0000008c change_SVF_Type(int, int, int, int, int, int, char const*)
20003a30 g     O .data	00000204 step_table
20011fe8 g     O .bss	00000014 patchCord35
00026154 g     F .text.itcm	00000380 AudioSynthWaveform::update()
20012dc0 g     O .bss	00000020 pl15amp
20012394 g     O .bss	00000014 patchCord78
00030cd4 g     F .text.itcm	0000018a ILI9341_t3::drawCircle(short, short, short, unsigned short)
20011ffc g     O .bss	00000014 patchCord36
20019100 g     O .bss	00009878 reverb1
00011f70 g     F .text.itcm	00000558 FX3Delay_dynamic()
0003a2d8 g     F .text.itcm	00000090 sm_set_pool
20005ec4 g     O .data	00000040 FX1Volume
20012010 g     O .bss	00000014 patchCord37
0000145c  w    F .text.itcm	00000134 newdigate::IndexableSDFile<128u, 2u>::~IndexableSDFile()
00012520 g     F .text.itcm	000000e0 draw_OSC_Detune(int, int, int, int, float, float, char const*)
0000bb1c g     F .text.itcm	00000510 savebutton()
60001428 g     F .text.code	0000022c ResetHandler
0001b1a8  w    F .text.itcm	000004cc newdigate::ResamplingReader<newdigate::IndexableSDFile<128u, 2u>, File>::play(char const*, bool, unsigned short)
20010a4c g     O .bss	00000004 enc_button
000037ac  w    F .text.itcm	00000098 AudioPlaySdResmp::AudioPlaySdResmp()
0003c518 g     F .text.itcm	000005fc __ieee754_powf
20014228 g     O .bss	0000003c pl3filter1
00027448 g     F .text.itcm	0000010a SDClass::format(int, char, Print&)
200140b0 g     O .bss	00000020 pl2dry
00002820  w    F .text.itcm	00000088 Encoder::isr13()
60078d90 g       *ABS*	00000000 _sdataload
2000e240 g     O .bss	00000038 FX1mixer1
00034ed0 g     F .text.itcm	000000b8 USBHost::new_Device(unsigned long, unsigned long, unsigned long)
00012aec g     F .text.itcm	00000040 change_OSC_DRUM_secondMix(int, int, int, int, float, float, char const*)
0003a03c g     F .text.itcm	00000020 usb_serial_getchar
20022d37 g     O .bss	00000001 desired_instrument
2000efd0 g     O .bss	00000004 EventResponder::lastYield
000013b4  w    F .text.itcm	000000a8 newdigate::IndexableSDFile<128u, 2u>::open(char const*)
2000f03c g     O .bss	00000008 AudioOutputI2SOct::dma
0003f384 g     F .text.itcm	0000004c sprintf
20022d3f g     O .bss	00000001 page_phrase_end
00029af4 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
0002be20 g     F .text.itcm	00000028 FsBaseFile::close()
000220c4 g     F .text.itcm	0000005c AudioControlSGTL5000::write(unsigned int, unsigned int)
000006a8  w    F .text.itcm	00000068 SDFile::getCreateTime(DateTimeFields&)
00000978  w    F .text.itcm	00000014 SDFile::flush()
0002c6a8 g     F .text.itcm	000000dc SharedSpiCard::erase(unsigned long, unsigned long)
0003d6a0 g     F .text.itcm	00000104 __kernel_cosf
0002ac44 g     F .text.itcm	000002a4 FatFile::open(FatFile*, FatLfn_t*, int)
20015910 g     O .bss	00000020 pl8amp
00036d3c g     F .text.itcm	00000038 AudioConnection::~AudioConnection()
00026f2c g     F .text.itcm	00000030 SPIClass::pinIsChipSelect(unsigned char)
00008a48 g     F .text.itcm	00000290 loadMixer()
0002a910 g     F .text.itcm	00000126 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00038178 g     F .text.itcm	00000134 memcpy
00013e6c g     F .text.itcm	000000b8 change_bitCrush_sampleRate(int, int, int, int, int, int, char const*)
0001433c g     F .text.itcm	00000120 FX1reverb_dynamic()
20011250 g     O .bss	00000014 patchCord149
00028150 g     F .text.itcm	0000008e ExFatFile::addCluster()
000391f0  w    F .text.itcm	00000004 usb_serial_class::peek()
000154a8 g     F .text.itcm	00000188 Plugin7_Page_Static(int)
20022a50 g     O .bss	00000200 tftRAM
00003128  w    F .text.itcm	00000088 Encoder::isr30()
2000eed0 g     O .bss	00000004 FsDateTime::callback2
0000f9e8 g     F .text.itcm	000002b8 NoteFX5_Page1_Dynamic()
20010ecc g     O .bss	00000014 patchCord108
00002ce8  w    F .text.itcm	00000088 Encoder::isr22()
20022cac g     O .bss	00000004 usb_midi_handleNoteOff
00039520 g     F .text.itcm	00000010 usb_midi_write_packed
20010ee0 g     O .bss	00000014 patchCord109
20015930 g     O .bss	00000020 pl8amp2
2000f1e8 g     O .bss	00000014 _trackname
000376ac g     F .text.itcm	0000001e Print::printf(__FlashStringHelper const*, ...)
000354ec g     F .text.itcm	00000164 USBHub::claim(Device_struct*, int, unsigned char const*, unsigned long)
0002dca8 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
00000140  w    F .text.itcm	0000000c File::write(unsigned char const*, unsigned int)
00029498 g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
0003ef7c g     F .text.itcm	00000002 __malloc_unlock
000033dc  w    F .text.itcm	0000008c Encoder::isr35()
000075c8 g     F .text.itcm	000000a4 recorder_Page_Static()
00036310 g     F .text.itcm	000000a2 MIDIDeviceBase::write_packed(unsigned long)
000358fc g     F .text.itcm	0000005c USBHub::send_clearstatus_overcurrent(unsigned long)
00021e74 g     F .text.itcm	00000024 SmfWriter::addNoteOnEvent(unsigned int, unsigned char, unsigned char, unsigned char)
20022d4e g     O .bss	00000001 trackTouchY
000008e4  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
0002da38 g     F .text.itcm	00000068 SdioCard::stopTransmission(bool)
000030a0  w    F .text.itcm	00000088 Encoder::isr29()
00030fc8 g     F .text.itcm	00000058 ILI9341_t3::fillCircle(short, short, short, unsigned short)
0002d3bc g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
000001d4  w    F .text.itcm	00000002 newdigate::ResamplingSdReader::~ResamplingSdReader()
0003f400 g     F .text.itcm	000000dc strlen
00033bc8 g     F .text.itcm	00000038 Adafruit_Keypad::Adafruit_Keypad(unsigned char*, unsigned char*, unsigned char*, int, int)
20022c54 g     O .bss	00000004 track
0001bdb8 g     F .text.itcm	00000548 loop
60001954 g     F .text.code	00000058 analog_init
0002de44 g     F .text.itcm	0000009c lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
0002f62c g     F .text.itcm	0000006c ILI9341_t3::ILI9341_t3(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00035d70 g     F .text.itcm	00000046 USBHub::status_change(Transfer_struct const*)
20022d35 g     O .bss	00000001 ch1tone
20012ba0 g     O .bss	00000020 pl12amp2
000223cc  w    F .text.itcm	00000020 AudioControlSGTL5000::volume(float)
00041d54 g     F .text.itcm	00000040 __hi0bits
00035e28 g     F .text.itcm	00000010 USBHost::free_Device(Device_struct*)
20022ca8 g     O .bss	00000004 usb_midi_handleControlChange
20006dd8 g     O .data	00000040 gainmax
0001c300  w    F .text.itcm	00000082 void std::vector<newdigate::indexedbuffer*, std::allocator<newdigate::indexedbuffer*> >::_M_emplace_back_aux<newdigate::indexedbuffer* const&>(newdigate::indexedbuffer* const&)
20014850 g     O .bss	00000020 pl4amp
00034eac g     F .text.itcm	00000024 USBHost::driver_ready_for_device(USBDriver*)
600019b4 g     F .text.code	00000002 startup_default_late_hook
00000cf0  w    F .text.itcm	00000034 File::~File()
200062fc g     O .data	0000000c WHITE
20014110 g     O .bss	00000020 pl3FX3
2000f22c g     O .bss	00000004 audio_rec_listen_graph
20014a10 g     O .bss	00000020 pl5amp2
200066c8 g     O .data	00000090 AudioFilterLadder::interpolation_coeffs
2000eedc g     O .bss	00000070 AudioStream::memory_pool_available_mask
00035e18 g     F .text.itcm	00000010 USBHost::allocate_Device()
000374b8 g     F .text.itcm	00000004 HardwareSerial::write(unsigned char)
200140d0 g     O .bss	00000020 pl3FX1
20022edc g     O .bss	00000001 usb_midi_msg_cable
00036db4 g     F .text.itcm	000000a0 DMAChannel::begin(bool)
200140f0 g     O .bss	00000020 pl3FX2
00013638 g     F .text.itcm	000002d8 Plugin1_Change()
0003de74 g     F .text.itcm	00000010 finite
00000174  w    F .text.itcm	0000002c File::read()
00023d98 g     F .text.itcm	000000f0 AudioMixer4::update()
20014a58 g     O .bss	00000020 pl5dry
2000729f g     O .data	00000001 __fdlib_version
0002d274 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000001a0  w    F .text.itcm	0000001e File::write(unsigned char)
00006bfc g     F .text.itcm	00000068 drawChar(int, unsigned char, char*, int)
20022d4d g     O .bss	00000001 start_of_loop
00003600  w    F .text.itcm	00000068 AudioPlaySdWav::AudioPlaySdWav()
00036b20 g     F .text.itcm	00000018 AudioStream::receiveReadOnly(unsigned int)
00004288 g     F .text.itcm	000001c4 drawPot_3(int, unsigned char, unsigned char, int, char*, int)
0002cc40  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00002f90  w    F .text.itcm	00000088 Encoder::isr27()
20002b54  w    O .data	0000000c vtable for AudioStream
00004614 g     F .text.itcm	000000dc drawActiveRect(int, unsigned char, unsigned char, unsigned char, bool, char*, int)
00023000 g     F .text.itcm	0000000c AudioFilterLadder::frequency(float)
00006e0c g     F .text.itcm	00000094 LP_drawOctave(int)
0002c074 g     F .text.itcm	00000070 DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
20014970 g     O .bss	00000020 pl4dry
00008d90 g     F .text.itcm	000002f4 saveTrack(char const*, unsigned char)
0003e324 g     F .text.itcm	00000024 .hidden __aeabi_f2lz
20012fa8 g     O .bss	00000020 pl1dry
20022da4 g     O .bss	00000010 extmem_smalloc_pool
0002dad8 g     F .text.itcm	00000104 SdSpiArduinoDriver::activate()
20038000 g       .text.csf	00000000 _estack
00039fc8 g     F .text.itcm	00000074 usb_serial_flush_input
00025b0c g     F .text.itcm	00000128 AudioSynthSimpleDrum::update()
0002df80 g     F .text.itcm	0000008c FsUtf::mbToCp(char const*, char const*, unsigned long*)
00033668 g     F .text.itcm	0000000a ILI9341_t3::setTextSize(unsigned char)
20014040 g     O .bss	00000030 pl2Pot
0002c1b8 g     F .text.itcm	00000060 SharedSpiCard::writeStop()
0002e588 g     F .text.itcm	0000000c lpi2c3_isr()
20012f80 g     O .bss	00000028 pl1dc1
000003c8  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
00028010 g     F .text.itcm	000000fc ExFatFile::open(ExFatFile*, char const*, int)
20022cfe g     O .bss	00000002 AudioOutputI2S::block_left_offset
200229ec g     O .bss	0000000c sgtl5000_1
2001727c g     O .bss	00000274 playSdWav10


